use std::hash::Hash;

use num_derive::FromPrimitive;
use strum::EnumIter;

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
pub enum Item {
    Hero(Hero),
    Variant(Variant),
    Villain(Villain),
    TeamVillain(TeamVillain),
    Environment(Environment),
    Scion,
    Filler,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
pub enum Location {
    Variant(Variant),
    Villain((Villain, u8)),
    TeamVillain((TeamVillain, u8)),
    Environment(Environment),
    Victory,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter, FromPrimitive)]
pub enum Villain {
    BaronBlade,
    MadBomberBaronBlade,
    CitizenDawn,
    GrandWarlordVoss,
    Omnitron,
    OmnitronII,
    Ambuscade,
    TheChairman,
    TheMatriarch,
    PlagueRat,
    Spite,
    SpiteAgentOfGloom,
    AkashBhuta,
    Apostate,
    TheEnnead,
    Gloomweaver,
    SkinwalkerGloomweaver,
    MissInformation,
    LaCapitan,
    TheDreamer,
    IronLegacy,
    Kismet,
    TricksterKismet,
    Deadline,
    Infinitor,
    HeroicInfinitor,
    KaargraWarfang,
    Progeny,
    WagerMaster,
    Chokepoint,
    Anathema,
    EvolvedAnathema,
    Celadroch,
    Dendron,
    WindcolorDendron,
    Dynamo,
    Gray,
    TheInfernalChoir,
    Menagerie,
    TheMistressOfFate,
    Mythos,
    Oriphel,
    Outlander,
    Phase,
    TheRam,
    Ram1929,
    ScreamMachine,
    SwarmEater,
    HivemindSwarmEater,
    Tiamat,
    HydraTiamat,
    Tiamat2199,
    Vector,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter, FromPrimitive)]
pub enum TeamVillain {
    BaronBlade,
    Ermine,
    Friction,
    FrightTrain,
    Proletariat,
    Ambuscade,
    Biomancer,
    Bugbear,
    LaCapitan,
    CitizensHammerAndAnvil,
    Greazer,
    MissInformation,
    TheOperative,
    PlagueRat,
    SergeantSteel,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter, FromPrimitive)]
pub enum Hero {
    AbsoluteZero,
    Bunker,
    Fanatic,
    Haka,
    Legacy,
    Ra,
    Tachyon,
    Tempest,
    Visionary,
    Wraith,
    Unity,
    Expatriette,
    MisterFixer,
    ArgentAdept,
    Nightmist,
    TheScholar,
    ChronoRanger,
    OmnitronX,
    CaptainCosmic,
    SkyScraper,
    Guise,
    KNYFE,
    TheNaturalist,
    Parse,
    TheSentiels,
    Setback,
    Benchmark,
    Stuntman,
    DoctorMedico,
    TheIdealist,
    Mainstay,
    Writhe,
    AkashThriya,
    LaComodora,
    TheHarpy,
    Lifeline,
    Luminary,
    Baccarat,
    TheCricket,
    Cypher,
    DocHavoc,
    Drift,
    Echelon,
    Gargoyle,
    Gyrosaur,
    Impact,
    TheKnight,
    LadyOfTheWood,
    MagnificentMara,
    Malichae,
    Necro,
    Pyre,
    Quicksilver,
    Starlight,
    TheStranger,
    TangoOne,
    Terminus,
    Titan,
    Vanish,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter, FromPrimitive)]
pub enum Environment {
    InsulaPrimalis,
    Megalopolis,
    RuinsOfAtlantis,
    WagnerMarsBase,
    SilverGulch1883,
    PikeIndustrialComplex,
    RookCity,
    RealmOfDiscord,
    TombOfAnubis,
    TheFinalWasteland,
    TheBlock,
    TimeCataclysm,
    DokThorathCapital,
    TheEnclaveOfTheEndlings,
    OmnitronIV,
    FreedomTower,
    MobileDefensePlatform,
    TheCourtOfBlood,
    MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities,
    Magmaria,
    TheTempleOfZhuLong,
    TheCelestialTribunal,
    ChampionStudios,
    FortAdamant,
    MaerynianRefuge,
    Mordengrad,
    NexusOfTheVoid,
    BlackwoodForest,
    CatchwaterHarbor1929,
    TheChasmOfAThousandNights,
    TheCybersphere,
    DungeonsOfTerror,
    FSCContinuanceWanderer,
    HalberdERC,
    NightloreCitadel,
    Northspar,
    OblaskCrater,
    StSimeonsCatacombs,
    SuperstormAkela,
    Vault5,
    TheWanderingIsle,
    WindmillCity,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter, FromPrimitive)]
pub enum Variant {
    Base,
    AmericasGreatestLegacy,
    AmericasNewestLegacy,
    DarkVisionary,
    TheEternalHaka,
    GIBunker,
    RaHorusOfTwoHorizons,
    RaSettingSun,
    RedeemerFanatic,
    RookCityWraith,
    TheSuperScientificTachyon,
    TheVisionaryUnleashed,
    CaptainCosmicRequital,
    ChronoRangerTheBestOfTimes,
    DarkConductorArgentAdept,
    ExtremistSkyScraper,
    OmnitronU,
    SantaGuise,
    TheScholarOfTheInfinite,
    ActionHeroStuntman,
    AkashThriyaSpiritOfTheVoid,
    BenchmarkSupplyAndDemand,
    HeroicLuminary,
    KNYFERogueAgent,
    LaComodoraCurseOfTheBlackSpot,
    LifelineBloodMage,
    ParseFugueState,
    TheAdamantSentinels,
    TheHuntedNaturalist,
    TermiNationBunker,
    TermiNationAbsoluteZero,
    TermiNationUnity,
    FreedomSixAbsoluteZero,
    FreedomSixBunker,
    FreedomSixTachyon,
    FreedomSixTempest,
    FreedomSixWraith,
    FreedomSixUnity,
    DarkWatchExpatriette,
    DarkWatchMisterFixer,
    DarkWatchNightmist,
    DarkWatchSetback,
    DarkWatchHarpy,
    PrimeWardensArgentAdept,
    PrimeWardensCaptainCosmic,
    PrimeWardensFanatic,
    PrimeWardensHaka,
    PrimeWardensTempest,
    XtremePrimeWardensArgentAdept,
    XtremePrimeWardensTempest,
    XtremePrimeWardensCaptainCosmic,
    XtremePrimeWardensFanatic,
    XtremePrimeWardensHaka,
    FreedomFiveAbsoluteZero,
    FreedomFiveBunker,
    FreedomFiveWraith,
    FreedomFiveTachyon,
    FreedomFiveLegacy,
    SuperSentaiIdealist,
    DrMedicoMalpractice,
    CosmicInventorWrithe,
    RoadWarriorMainstay,
    CompletionistGuise,
    MadBomberBaronBlade,
    OmnitronII,
    SpiteAgentOfGloom,
    SkinwalkerGloomweaver,
    TricksterKismet,
    HeroicInfinitor,
    BaccaratAceOfSwords,
    BaccaratAceOfSorrows,
    Baccarat1929,
    FirstResponseCricket,
    TheCricketRenegade,
    TheCricketWastelandRonin,
    FirstResponseCypher,
    CypherSwarmingProtocol,
    FirstResponseDocHavoc,
    DocHavoc2199,
    DriftThroughTheBreach,
    Drift1929And2199,
    Drift1609,
    Drift1789,
    TestSubjectDrift,
    FirstResponseEchelon,
    Echelon2199,
    GargoyleWastelandRonin,
    Gargoyle2199,
    GargoyleDragonRanger,
    GargoyleInfiltrator,
    GyrosaurSpeedDemon,
    GyrosaurRenegade,
    CaptainGyrosaur,
    ImpactRenegade,
    ImpactWastelandRonin,
    TheFairKnight,
    TheBerserkerKnight,
    TheKnight1929,
    TheKnightsWastelandRonin,
    LadyOfTheWoodSeasonOfChange,
    MinistryOfStrategicScienceLadyOfTheWood,
    LadyOfTheWood2199,
    MinistryOfStrategicScienceMagnificentMara,
    MagnificentMara1929,
    ShardmasterMalichae,
    MinistryOfStrategicScienceMalichae,
    NecroWardenOfChaos,
    Necro1929,
    NecroLastOfTheForgottenOrder,
    TheUnstablePyre,
    PyreWastelandRonin,
    PyreExpeditionOblask,
    TheUncannyQuicksilver,
    QuicksilverRenegade,
    HarbingerQuicksilver,
    StarlightGenesis,
    NightloreCouncilStarlight,
    StarlightArea51,
    TheRunecarvedStranger,
    TheStranger1929,
    TheStrangerWastelandRonin,
    TheStrangerInTheCorn,
    TangoOneGhostOps,
    TangoOne1929,
    TangoOneCreedOfTheSniper,
    MinistryOfStrategicScienceTerminus,
    Terminus2199,
    MinistryOfStrategicScienceTitan,
    Titan2199,
    TitanOni,
    FirstResponseVanish,
    Vanish1929,
    VanishTombOfThieves,
}

impl Variant {
    pub const fn variant_count() -> usize {
        133
    }

    pub fn to_i(&self) -> u8 {
        match self {
            Variant::Base => 0,
            Variant::AmericasGreatestLegacy => 1,
            Variant::AmericasNewestLegacy => 2,
            Variant::DarkVisionary => 1,
            Variant::TheEternalHaka => 1,
            Variant::GIBunker => 1,
            Variant::RaHorusOfTwoHorizons => 1,
            Variant::RaSettingSun => 2,
            Variant::RedeemerFanatic => 1,
            Variant::RookCityWraith => 1,
            Variant::TheSuperScientificTachyon => 1,
            Variant::TheVisionaryUnleashed => 2,
            Variant::CaptainCosmicRequital => 1,
            Variant::ChronoRangerTheBestOfTimes => 1,
            Variant::DarkConductorArgentAdept => 1,
            Variant::ExtremistSkyScraper => 1,
            Variant::OmnitronU => 1,
            Variant::SantaGuise => 1,
            Variant::TheScholarOfTheInfinite => 1,
            Variant::ActionHeroStuntman => 1,
            Variant::AkashThriyaSpiritOfTheVoid => 1,
            Variant::BenchmarkSupplyAndDemand => 1,
            Variant::HeroicLuminary => 1,
            Variant::KNYFERogueAgent => 1,
            Variant::LaComodoraCurseOfTheBlackSpot => 1,
            Variant::LifelineBloodMage => 1,
            Variant::ParseFugueState => 1,
            Variant::TheAdamantSentinels => 1,
            Variant::TheHuntedNaturalist => 1,
            Variant::TermiNationBunker => 2,
            Variant::TermiNationAbsoluteZero => 2,
            Variant::TermiNationUnity => 1,
            Variant::FreedomSixAbsoluteZero => 3,
            Variant::FreedomSixBunker => 3,
            Variant::FreedomSixTachyon => 2,
            Variant::FreedomSixTempest => 1,
            Variant::FreedomSixWraith => 2,
            Variant::FreedomSixUnity => 2,
            Variant::DarkWatchExpatriette => 1,
            Variant::DarkWatchMisterFixer => 1,
            Variant::DarkWatchNightmist => 1,
            Variant::DarkWatchSetback => 1,
            Variant::DarkWatchHarpy => 1,
            Variant::PrimeWardensArgentAdept => 2,
            Variant::PrimeWardensCaptainCosmic => 2,
            Variant::PrimeWardensFanatic => 2,
            Variant::PrimeWardensHaka => 2,
            Variant::PrimeWardensTempest => 2,
            Variant::XtremePrimeWardensArgentAdept => 3,
            Variant::XtremePrimeWardensTempest => 3,
            Variant::XtremePrimeWardensCaptainCosmic => 3,
            Variant::XtremePrimeWardensFanatic => 3,
            Variant::XtremePrimeWardensHaka => 3,
            Variant::FreedomFiveAbsoluteZero => 4,
            Variant::FreedomFiveBunker => 4,
            Variant::FreedomFiveWraith => 3,
            Variant::FreedomFiveTachyon => 3,
            Variant::FreedomFiveLegacy => 3,
            Variant::SuperSentaiIdealist => 1,
            Variant::DrMedicoMalpractice => 1,
            Variant::CosmicInventorWrithe => 1,
            Variant::RoadWarriorMainstay => 1,
            Variant::CompletionistGuise => 2,
            Variant::MadBomberBaronBlade => 0,
            Variant::OmnitronII => 0,
            Variant::SpiteAgentOfGloom => 0,
            Variant::SkinwalkerGloomweaver => 0,
            Variant::TricksterKismet => 0,
            Variant::HeroicInfinitor => 0,
            Variant::BaccaratAceOfSwords => 1,
            Variant::BaccaratAceOfSorrows => 2,
            Variant::Baccarat1929 => 3,
            Variant::FirstResponseCricket => 1,
            Variant::TheCricketRenegade => 2,
            Variant::TheCricketWastelandRonin => 3,
            Variant::FirstResponseCypher => 1,
            Variant::CypherSwarmingProtocol => 2,
            Variant::FirstResponseDocHavoc => 1,
            Variant::DocHavoc2199 => 2,
            Variant::DriftThroughTheBreach => 1,
            Variant::Drift1929And2199 => 2,
            Variant::Drift1609 => 3,
            Variant::Drift1789 => 4,
            Variant::TestSubjectDrift => 5,
            Variant::FirstResponseEchelon => 1,
            Variant::Echelon2199 => 2,
            Variant::GargoyleWastelandRonin => 1,
            Variant::Gargoyle2199 => 2,
            Variant::GargoyleDragonRanger => 3,
            Variant::GargoyleInfiltrator => 4,
            Variant::GyrosaurSpeedDemon => 1,
            Variant::GyrosaurRenegade => 2,
            Variant::CaptainGyrosaur => 3,
            Variant::ImpactRenegade => 1,
            Variant::ImpactWastelandRonin => 2,
            Variant::TheFairKnight => 1,
            Variant::TheBerserkerKnight => 2,
            Variant::TheKnight1929 => 3,
            Variant::TheKnightsWastelandRonin => 4,
            Variant::LadyOfTheWoodSeasonOfChange => 1,
            Variant::MinistryOfStrategicScienceLadyOfTheWood => 2,
            Variant::LadyOfTheWood2199 => 3,
            Variant::MinistryOfStrategicScienceMagnificentMara => 1,
            Variant::MagnificentMara1929 => 2,
            Variant::ShardmasterMalichae => 1,
            Variant::MinistryOfStrategicScienceMalichae => 2,
            Variant::NecroWardenOfChaos => 1,
            Variant::Necro1929 => 2,
            Variant::NecroLastOfTheForgottenOrder => 3,
            Variant::TheUnstablePyre => 1,
            Variant::PyreWastelandRonin => 2,
            Variant::PyreExpeditionOblask => 3,
            Variant::TheUncannyQuicksilver => 1,
            Variant::QuicksilverRenegade => 2,
            Variant::HarbingerQuicksilver => 3,
            Variant::StarlightGenesis => 1,
            Variant::NightloreCouncilStarlight => 2,
            Variant::StarlightArea51 => 3,
            Variant::TheRunecarvedStranger => 1,
            Variant::TheStranger1929 => 2,
            Variant::TheStrangerWastelandRonin => 3,
            Variant::TheStrangerInTheCorn => 4,
            Variant::TangoOneGhostOps => 1,
            Variant::TangoOne1929 => 2,
            Variant::TangoOneCreedOfTheSniper => 3,
            Variant::MinistryOfStrategicScienceTerminus => 1,
            Variant::Terminus2199 => 2,
            Variant::MinistryOfStrategicScienceTitan => 1,
            Variant::Titan2199 => 2,
            Variant::TitanOni => 3,
            Variant::FirstResponseVanish => 1,
            Variant::Vanish1929 => 2,
            Variant::VanishTombOfThieves => 3,
        }
    }

    pub fn to_normal(&self) -> Option<Hero> {
        match self {
            Variant::Base => None,
            Variant::AmericasGreatestLegacy => Some(Hero::Legacy),
            Variant::AmericasNewestLegacy => Some(Hero::Legacy),
            Variant::DarkVisionary => Some(Hero::Visionary),
            Variant::TheEternalHaka => Some(Hero::Haka),
            Variant::GIBunker => Some(Hero::Bunker),
            Variant::RaHorusOfTwoHorizons => Some(Hero::Ra),
            Variant::RaSettingSun => Some(Hero::Ra),
            Variant::RedeemerFanatic => Some(Hero::Fanatic),
            Variant::RookCityWraith => Some(Hero::Wraith),
            Variant::TheSuperScientificTachyon => Some(Hero::Tachyon),
            Variant::TheVisionaryUnleashed => Some(Hero::Visionary),
            Variant::CaptainCosmicRequital => Some(Hero::CaptainCosmic),
            Variant::ChronoRangerTheBestOfTimes => Some(Hero::ChronoRanger),
            Variant::DarkConductorArgentAdept => Some(Hero::ArgentAdept),
            Variant::ExtremistSkyScraper => Some(Hero::SkyScraper),
            Variant::OmnitronU => Some(Hero::OmnitronX),
            Variant::SantaGuise => Some(Hero::Guise),
            Variant::TheScholarOfTheInfinite => Some(Hero::TheScholar),
            Variant::ActionHeroStuntman => Some(Hero::Stuntman),
            Variant::AkashThriyaSpiritOfTheVoid => Some(Hero::AkashThriya),
            Variant::BenchmarkSupplyAndDemand => Some(Hero::Benchmark),
            Variant::HeroicLuminary => Some(Hero::Luminary),
            Variant::KNYFERogueAgent => Some(Hero::KNYFE),
            Variant::LaComodoraCurseOfTheBlackSpot => Some(Hero::LaComodora),
            Variant::LifelineBloodMage => Some(Hero::Lifeline),
            Variant::ParseFugueState => Some(Hero::Parse),
            Variant::TheAdamantSentinels => Some(Hero::TheSentiels),
            Variant::TheHuntedNaturalist => Some(Hero::TheNaturalist),
            Variant::TermiNationBunker => Some(Hero::Bunker),
            Variant::TermiNationAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::TermiNationUnity => Some(Hero::Unity),
            Variant::FreedomSixAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::FreedomSixBunker => Some(Hero::Bunker),
            Variant::FreedomSixTachyon => Some(Hero::Tachyon),
            Variant::FreedomSixTempest => Some(Hero::Tempest),
            Variant::FreedomSixWraith => Some(Hero::Wraith),
            Variant::FreedomSixUnity => Some(Hero::Unity),
            Variant::DarkWatchExpatriette => Some(Hero::Expatriette),
            Variant::DarkWatchMisterFixer => Some(Hero::MisterFixer),
            Variant::DarkWatchNightmist => Some(Hero::Nightmist),
            Variant::DarkWatchSetback => Some(Hero::Setback),
            Variant::DarkWatchHarpy => Some(Hero::TheHarpy),
            Variant::PrimeWardensArgentAdept => Some(Hero::ArgentAdept),
            Variant::PrimeWardensCaptainCosmic => Some(Hero::CaptainCosmic),
            Variant::PrimeWardensFanatic => Some(Hero::Fanatic),
            Variant::PrimeWardensHaka => Some(Hero::Haka),
            Variant::PrimeWardensTempest => Some(Hero::Tempest),
            Variant::XtremePrimeWardensArgentAdept => Some(Hero::ArgentAdept),
            Variant::XtremePrimeWardensTempest => Some(Hero::Tempest),
            Variant::XtremePrimeWardensCaptainCosmic => Some(Hero::CaptainCosmic),
            Variant::XtremePrimeWardensFanatic => Some(Hero::Fanatic),
            Variant::XtremePrimeWardensHaka => Some(Hero::Haka),
            Variant::FreedomFiveAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::FreedomFiveBunker => Some(Hero::Bunker),
            Variant::FreedomFiveWraith => Some(Hero::Wraith),
            Variant::FreedomFiveTachyon => Some(Hero::Tachyon),
            Variant::FreedomFiveLegacy => Some(Hero::Legacy),
            Variant::SuperSentaiIdealist => Some(Hero::TheIdealist),
            Variant::DrMedicoMalpractice => Some(Hero::DoctorMedico),
            Variant::CosmicInventorWrithe => Some(Hero::Writhe),
            Variant::RoadWarriorMainstay => Some(Hero::Mainstay),
            Variant::CompletionistGuise => Some(Hero::Guise),
            Variant::MadBomberBaronBlade => None,
            Variant::OmnitronII => None,
            Variant::SpiteAgentOfGloom => None,
            Variant::SkinwalkerGloomweaver => None,
            Variant::TricksterKismet => None,
            Variant::HeroicInfinitor => None,
            Variant::BaccaratAceOfSwords => Some(Hero::Baccarat),
            Variant::BaccaratAceOfSorrows => Some(Hero::Baccarat),
            Variant::Baccarat1929 => Some(Hero::Baccarat),
            Variant::FirstResponseCricket => Some(Hero::TheCricket),
            Variant::TheCricketRenegade => Some(Hero::TheCricket),
            Variant::TheCricketWastelandRonin => Some(Hero::TheCricket),
            Variant::FirstResponseCypher => Some(Hero::Cypher),
            Variant::CypherSwarmingProtocol => Some(Hero::Cypher),
            Variant::FirstResponseDocHavoc => Some(Hero::DocHavoc),
            Variant::DocHavoc2199 => Some(Hero::DocHavoc),
            Variant::DriftThroughTheBreach => Some(Hero::Drift),
            Variant::Drift1929And2199 => Some(Hero::Drift),
            Variant::Drift1609 => Some(Hero::Drift),
            Variant::Drift1789 => Some(Hero::Drift),
            Variant::TestSubjectDrift => Some(Hero::Drift),
            Variant::FirstResponseEchelon => Some(Hero::Echelon),
            Variant::Echelon2199 => Some(Hero::Echelon),
            Variant::GargoyleWastelandRonin => Some(Hero::Gargoyle),
            Variant::Gargoyle2199 => Some(Hero::Gargoyle),
            Variant::GargoyleDragonRanger => Some(Hero::Gargoyle),
            Variant::GargoyleInfiltrator => Some(Hero::Gargoyle),
            Variant::GyrosaurSpeedDemon => Some(Hero::Gyrosaur),
            Variant::GyrosaurRenegade => Some(Hero::Gyrosaur),
            Variant::CaptainGyrosaur => Some(Hero::Gyrosaur),
            Variant::ImpactRenegade => Some(Hero::Impact),
            Variant::ImpactWastelandRonin => Some(Hero::Impact),
            Variant::TheFairKnight => Some(Hero::TheKnight),
            Variant::TheBerserkerKnight => Some(Hero::TheKnight),
            Variant::TheKnight1929 => Some(Hero::TheKnight),
            Variant::TheKnightsWastelandRonin => Some(Hero::TheKnight),
            Variant::LadyOfTheWoodSeasonOfChange => Some(Hero::LadyOfTheWood),
            Variant::MinistryOfStrategicScienceLadyOfTheWood => Some(Hero::LadyOfTheWood),
            Variant::LadyOfTheWood2199 => Some(Hero::LadyOfTheWood),
            Variant::MinistryOfStrategicScienceMagnificentMara => Some(Hero::MagnificentMara),
            Variant::MagnificentMara1929 => Some(Hero::MagnificentMara),
            Variant::ShardmasterMalichae => Some(Hero::Malichae),
            Variant::MinistryOfStrategicScienceMalichae => Some(Hero::Malichae),
            Variant::NecroWardenOfChaos => Some(Hero::Necro),
            Variant::Necro1929 => Some(Hero::Necro),
            Variant::NecroLastOfTheForgottenOrder => Some(Hero::Necro),
            Variant::TheUnstablePyre => Some(Hero::Pyre),
            Variant::PyreWastelandRonin => Some(Hero::Pyre),
            Variant::PyreExpeditionOblask => Some(Hero::Pyre),
            Variant::TheUncannyQuicksilver => Some(Hero::Quicksilver),
            Variant::QuicksilverRenegade => Some(Hero::Quicksilver),
            Variant::HarbingerQuicksilver => Some(Hero::Quicksilver),
            Variant::StarlightGenesis => Some(Hero::Starlight),
            Variant::NightloreCouncilStarlight => Some(Hero::Starlight),
            Variant::StarlightArea51 => Some(Hero::Starlight),
            Variant::TheRunecarvedStranger => Some(Hero::TheStranger),
            Variant::TheStranger1929 => Some(Hero::TheStranger),
            Variant::TheStrangerWastelandRonin => Some(Hero::TheStranger),
            Variant::TheStrangerInTheCorn => Some(Hero::TheStranger),
            Variant::TangoOneGhostOps => Some(Hero::TangoOne),
            Variant::TangoOne1929 => Some(Hero::TangoOne),
            Variant::TangoOneCreedOfTheSniper => Some(Hero::TangoOne),
            Variant::MinistryOfStrategicScienceTerminus => Some(Hero::Terminus),
            Variant::Terminus2199 => Some(Hero::Terminus),
            Variant::MinistryOfStrategicScienceTitan => Some(Hero::Titan),
            Variant::Titan2199 => Some(Hero::Titan),
            Variant::TitanOni => Some(Hero::Titan),
            Variant::FirstResponseVanish => Some(Hero::Vanish),
            Variant::Vanish1929 => Some(Hero::Vanish),
            Variant::VanishTombOfThieves => Some(Hero::Vanish),
        }
    }

    pub fn to_str(&self) -> &str {
        match self {
            Variant::Base => "Base",
            Variant::AmericasGreatestLegacy => "America's Greatest Legacy",
            Variant::AmericasNewestLegacy => "America's Newest Legacy",
            Variant::DarkVisionary => "Dark Visionary",
            Variant::TheEternalHaka => "The Eternal Haka",
            Variant::GIBunker => "G.I. Bunker",
            Variant::RaHorusOfTwoHorizons => "Ra: Horus of Two Horizons",
            Variant::RaSettingSun => "Ra: Setting Sun",
            Variant::RedeemerFanatic => "Redeemer Fanatic",
            Variant::RookCityWraith => "Rook City Wraith",
            Variant::TheSuperScientificTachyon => "The Super-Scientific Tachyon",
            Variant::TheVisionaryUnleashed => "The Visionary Unleashed",
            Variant::CaptainCosmicRequital => "Captain Cosmic Requital",
            Variant::ChronoRangerTheBestOfTimes => "Chrono-Ranger The Best of Times",
            Variant::DarkConductorArgentAdept => "Dark Conductor Argent Adept",
            Variant::ExtremistSkyScraper => "Extremist Sky-Scraper",
            Variant::OmnitronU => "Omnitron-U",
            Variant::SantaGuise => "Santa Guise",
            Variant::TheScholarOfTheInfinite => "The Scholar of the Infinite",
            Variant::ActionHeroStuntman => "Action Hero Stuntman",
            Variant::AkashThriyaSpiritOfTheVoid => "Akash'Thriya: Spirit of the Void",
            Variant::BenchmarkSupplyAndDemand => "Benchmark Supply and Demand",
            Variant::HeroicLuminary => "Heroic Luminary",
            Variant::KNYFERogueAgent => "K.N.Y.F.E. Rogue Agent",
            Variant::LaComodoraCurseOfTheBlackSpot => "La Comodora: Curse of the Black Spot",
            Variant::LifelineBloodMage => "Lifeline Blood Mage",
            Variant::ParseFugueState => "Parse: Fugue State",
            Variant::TheAdamantSentinels => "The Adamant Sentinels",
            Variant::TheHuntedNaturalist => "The Hunted Naturalist",
            Variant::TermiNationBunker => "Termi-Nation Bunker",
            Variant::TermiNationAbsoluteZero => "Termi-Nation Absolute Zero",
            Variant::TermiNationUnity => "Termi-Nation Unity",
            Variant::FreedomSixAbsoluteZero => "Freedom Six Absolute Zero",
            Variant::FreedomSixBunker => "Freedom Six Bunker",
            Variant::FreedomSixTachyon => "Freedom Six Tachyon",
            Variant::FreedomSixTempest => "Freedom Six Tempest",
            Variant::FreedomSixWraith => "Freedom Six Wraith",
            Variant::FreedomSixUnity => "Freedom Six Unity",
            Variant::DarkWatchExpatriette => "Dark Watch Expatriette",
            Variant::DarkWatchMisterFixer => "Dark Watch Mister Fixer",
            Variant::DarkWatchNightmist => "Dark Watch Nightmist",
            Variant::DarkWatchSetback => "Dark Watch Setback",
            Variant::DarkWatchHarpy => "Dark Watch Harpy",
            Variant::PrimeWardensArgentAdept => "Prime Wardens Argent Adept",
            Variant::PrimeWardensCaptainCosmic => "Prime Wardens Captain Cosmic",
            Variant::PrimeWardensFanatic => "Prime Wardens Fanatic",
            Variant::PrimeWardensHaka => "Prime Wardens Haka",
            Variant::PrimeWardensTempest => "Prime Wardens Tempest",
            Variant::XtremePrimeWardensArgentAdept => "XTreme Prime Wardens Argent Adept",
            Variant::XtremePrimeWardensTempest => "XTreme Prime Wardens Tempest",
            Variant::XtremePrimeWardensCaptainCosmic => "XTreme Prime Wardens Captain Cosmic",
            Variant::XtremePrimeWardensFanatic => "XTreme Prime Wardens Fanatic",
            Variant::XtremePrimeWardensHaka => "XTreme Prime Wardens Haka",
            Variant::FreedomFiveAbsoluteZero => "Freedom Five Absolute Zero",
            Variant::FreedomFiveBunker => "Freedom Five Bunker",
            Variant::FreedomFiveWraith => "Freedom Five Wraith",
            Variant::FreedomFiveTachyon => "Freedom Five Tachyon",
            Variant::FreedomFiveLegacy => "Freedom Five Legacy",
            Variant::SuperSentaiIdealist => "Super Sentai Idealist",
            Variant::DrMedicoMalpractice => "Dr. Medico Malpractice",
            Variant::CosmicInventorWrithe => "Cosmic Inventor Writhe",
            Variant::RoadWarriorMainstay => "Road Warrior Mainstay",
            Variant::CompletionistGuise => "Completionist Guise",
            Variant::MadBomberBaronBlade => "Mad Bomber Baron Blade",
            Variant::OmnitronII => "Omnitron II",
            Variant::SpiteAgentOfGloom => "Spite: Agent of Gloom",
            Variant::SkinwalkerGloomweaver => "Skinwalker Gloomweaver",
            Variant::TricksterKismet => "Trickster Kismet",
            Variant::HeroicInfinitor => "Heroic Infinitor",
            Variant::BaccaratAceOfSwords => "Baccarat Ace of Swords",
            Variant::BaccaratAceOfSorrows => "Baccarat Ace of Sorrows",
            Variant::Baccarat1929 => "Baccarat 1929",
            Variant::FirstResponseCricket => "First Response Cricket",
            Variant::TheCricketRenegade => "The Cricket Renegade",
            Variant::TheCricketWastelandRonin => "The Cricket Wasteland Ronin",
            Variant::FirstResponseCypher => "First Response Cypher",
            Variant::CypherSwarmingProtocol => "Cypher Swarming Protocol",
            Variant::FirstResponseDocHavoc => "First Response Doc Havoc",
            Variant::DocHavoc2199 => "Doc Havoc 2199",
            Variant::DriftThroughTheBreach => "Drift Through The Breach",
            Variant::Drift1929And2199 => "Drift 1929 & 2199",
            Variant::Drift1609 => "Drift 1609",
            Variant::Drift1789 => "Drift 1789",
            Variant::TestSubjectDrift => "Test Subject Drift",
            Variant::FirstResponseEchelon => "First Response Echelon",
            Variant::Echelon2199 => "Echelon 2199",
            Variant::GargoyleWastelandRonin => "Gargoyle Wasteland Ronin",
            Variant::Gargoyle2199 => "Gargoyle 2199",
            Variant::GargoyleDragonRanger => "Gargoyle Dragon Ranger",
            Variant::GargoyleInfiltrator => "Gargoyle Infiltrator",
            Variant::GyrosaurSpeedDemon => "Gyrosaur Speed Demon",
            Variant::GyrosaurRenegade => "Gyrosaur Renegade",
            Variant::CaptainGyrosaur => "Captain Gyrosaur",
            Variant::ImpactRenegade => "Impact Renegade",
            Variant::ImpactWastelandRonin => "Impact Wasteland Ronin",
            Variant::TheFairKnight => "The Fair Knight",
            Variant::TheBerserkerKnight => "The Berserker Knight",
            Variant::TheKnight1929 => "The Knight 1929",
            Variant::TheKnightsWastelandRonin => "TheKnights Wasteland Ronin",
            Variant::LadyOfTheWoodSeasonOfChange => "Lady of the Wood Season of Change",
            Variant::MinistryOfStrategicScienceLadyOfTheWood => "Ministry of Strategic Science Lady of the Wood",
            Variant::LadyOfTheWood2199 => "Lady of the Wood 2199",
            Variant::MinistryOfStrategicScienceMagnificentMara => "Ministry of Strategic Science Magnificent Mara",
            Variant::MagnificentMara1929 => "Magnificent Mara 1929",
            Variant::ShardmasterMalichae => "Shardmaster Malichae",
            Variant::MinistryOfStrategicScienceMalichae => "Ministry of Strategic Science Malichae",
            Variant::NecroWardenOfChaos => "Necro Warden of Chaos",
            Variant::Necro1929 => "Necro 1929",
            Variant::NecroLastOfTheForgottenOrder => "Necro Last of the Forgotten Order",
            Variant::TheUnstablePyre => "The Unstable Pyre",
            Variant::PyreWastelandRonin => "Pyre Wasteland Ronin",
            Variant::PyreExpeditionOblask => "Pyre Expedition Oblask",
            Variant::TheUncannyQuicksilver => "The Uncanny Quicksilver",
            Variant::QuicksilverRenegade => "Quicksilver Renegade",
            Variant::HarbingerQuicksilver => "Harbinger Quicksilver",
            Variant::StarlightGenesis => "Starlight Genesis",
            Variant::NightloreCouncilStarlight => "Nightlore Council Starlight",
            Variant::StarlightArea51 => "Starlight Area-51",
            Variant::TheRunecarvedStranger => "The Runecarved Stranger",
            Variant::TheStranger1929 => "The Stranger 1929",
            Variant::TheStrangerWastelandRonin => "The Stranger Wasteland Ronin",
            Variant::TheStrangerInTheCorn => "The Stranger in the Corn",
            Variant::TangoOneGhostOps => "Tango One Ghost Ops",
            Variant::TangoOne1929 => "Tango One 1929",
            Variant::TangoOneCreedOfTheSniper => "Tango One Creed of the Sniper",
            Variant::MinistryOfStrategicScienceTerminus => "Ministry of Strategic Science Terminus",
            Variant::Terminus2199 => "Terminus 2199",
            Variant::MinistryOfStrategicScienceTitan => "Ministry of Strategic Science Titan",
            Variant::Titan2199 => "Titan 2199",
            Variant::TitanOni => "Titan Oni",
            Variant::FirstResponseVanish => "First Response Vanish",
            Variant::Vanish1929 => "Vanish 1929",
            Variant::VanishTombOfThieves => "Vanish Tomb of Thieves",
        }
    }

    pub fn from_hero(hero: Hero, i: u32) -> Option<Variant> {
        match (hero, i) {
            (Hero::Legacy, 1) => Some(Variant::AmericasGreatestLegacy),
            (Hero::Legacy, 2) => Some(Variant::AmericasNewestLegacy),
            (Hero::Visionary, 1) => Some(Variant::DarkVisionary),
            (Hero::Haka, 1) => Some(Variant::TheEternalHaka),
            (Hero::Bunker, 1) => Some(Variant::GIBunker),
            (Hero::Ra, 1) => Some(Variant::RaHorusOfTwoHorizons),
            (Hero::Ra, 2) => Some(Variant::RaSettingSun),
            (Hero::Fanatic, 1) => Some(Variant::RedeemerFanatic),
            (Hero::Wraith, 1) => Some(Variant::RookCityWraith),
            (Hero::Tachyon, 1) => Some(Variant::TheSuperScientificTachyon),
            (Hero::Visionary, 2) => Some(Variant::TheVisionaryUnleashed),
            (Hero::CaptainCosmic, 1) => Some(Variant::CaptainCosmicRequital),
            (Hero::ChronoRanger, 1) => Some(Variant::ChronoRangerTheBestOfTimes),
            (Hero::ArgentAdept, 1) => Some(Variant::DarkConductorArgentAdept),
            (Hero::SkyScraper, 1) => Some(Variant::ExtremistSkyScraper),
            (Hero::OmnitronX, 1) => Some(Variant::OmnitronU),
            (Hero::Guise, 1) => Some(Variant::SantaGuise),
            (Hero::TheScholar, 1) => Some(Variant::TheScholarOfTheInfinite),
            (Hero::Stuntman, 1) => Some(Variant::ActionHeroStuntman),
            (Hero::AkashThriya, 1) => Some(Variant::AkashThriyaSpiritOfTheVoid),
            (Hero::Benchmark, 1) => Some(Variant::BenchmarkSupplyAndDemand),
            (Hero::Luminary, 1) => Some(Variant::HeroicLuminary),
            (Hero::KNYFE, 1) => Some(Variant::KNYFERogueAgent),
            (Hero::LaComodora, 1) => Some(Variant::LaComodoraCurseOfTheBlackSpot),
            (Hero::Lifeline, 1) => Some(Variant::LifelineBloodMage),
            (Hero::Parse, 1) => Some(Variant::ParseFugueState),
            (Hero::TheSentiels, 1) => Some(Variant::TheAdamantSentinels),
            (Hero::TheNaturalist, 1) => Some(Variant::TheHuntedNaturalist),
            (Hero::Bunker, 2) => Some(Variant::TermiNationBunker),
            (Hero::AbsoluteZero, 2) => Some(Variant::TermiNationAbsoluteZero),
            (Hero::Unity, 1) => Some(Variant::TermiNationUnity),
            (Hero::AbsoluteZero, 3) => Some(Variant::FreedomSixAbsoluteZero),
            (Hero::Bunker, 3) => Some(Variant::FreedomSixBunker),
            (Hero::Tachyon, 2) => Some(Variant::FreedomSixTachyon),
            (Hero::Tempest, 1) => Some(Variant::FreedomSixTempest),
            (Hero::Wraith, 2) => Some(Variant::FreedomSixWraith),
            (Hero::Unity, 2) => Some(Variant::FreedomSixUnity),
            (Hero::Expatriette, 1) => Some(Variant::DarkWatchExpatriette),
            (Hero::MisterFixer, 1) => Some(Variant::DarkWatchMisterFixer),
            (Hero::Nightmist, 1) => Some(Variant::DarkWatchNightmist),
            (Hero::Setback, 1) => Some(Variant::DarkWatchSetback),
            (Hero::TheHarpy, 1) => Some(Variant::DarkWatchHarpy),
            (Hero::ArgentAdept, 2) => Some(Variant::PrimeWardensArgentAdept),
            (Hero::CaptainCosmic, 2) => Some(Variant::PrimeWardensCaptainCosmic),
            (Hero::Fanatic, 2) => Some(Variant::PrimeWardensFanatic),
            (Hero::Haka, 2) => Some(Variant::PrimeWardensHaka),
            (Hero::Tempest, 2) => Some(Variant::PrimeWardensTempest),
            (Hero::ArgentAdept, 3) => Some(Variant::XtremePrimeWardensArgentAdept),
            (Hero::Tempest, 3) => Some(Variant::XtremePrimeWardensTempest),
            (Hero::CaptainCosmic, 3) => Some(Variant::XtremePrimeWardensCaptainCosmic),
            (Hero::Fanatic, 3) => Some(Variant::XtremePrimeWardensFanatic),
            (Hero::Haka, 3) => Some(Variant::XtremePrimeWardensHaka),
            (Hero::AbsoluteZero, 4) => Some(Variant::FreedomFiveAbsoluteZero),
            (Hero::Bunker, 4) => Some(Variant::FreedomFiveBunker),
            (Hero::Wraith, 3) => Some(Variant::FreedomFiveWraith),
            (Hero::Tachyon, 3) => Some(Variant::FreedomFiveTachyon),
            (Hero::Legacy, 3) => Some(Variant::FreedomFiveLegacy),
            (Hero::TheIdealist, 1) => Some(Variant::SuperSentaiIdealist),
            (Hero::DoctorMedico, 1) => Some(Variant::DrMedicoMalpractice),
            (Hero::Writhe, 1) => Some(Variant::CosmicInventorWrithe),
            (Hero::Mainstay, 1) => Some(Variant::RoadWarriorMainstay),
            (Hero::Guise, 2) => Some(Variant::CompletionistGuise),
            _ => None,
        }
    }
}

impl Hero {
    pub const fn variant_count() -> usize {
        59
    }

    pub fn to_str(&self) -> &str {
        match self {
            Hero::AbsoluteZero => "Absolute Zero",
            Hero::Bunker => "Bunker",
            Hero::Fanatic => "Fanatic",
            Hero::Haka => "Haka",
            Hero::Legacy => "Legacy",
            Hero::Ra => "Ra",
            Hero::Tachyon => "Tachyon",
            Hero::Tempest => "Tempest",
            Hero::Visionary => "Visionary",
            Hero::Wraith => "Wraith",
            Hero::Unity => "Unity",
            Hero::Expatriette => "Expatriette",
            Hero::MisterFixer => "Mister Fixer",
            Hero::ArgentAdept => "Argent Adept",
            Hero::Nightmist => "Nightmist",
            Hero::TheScholar => "The Scholar",
            Hero::ChronoRanger => "Chrono-Ranger",
            Hero::OmnitronX => "Omnitron-X",
            Hero::CaptainCosmic => "Captain Cosmic",
            Hero::SkyScraper => "Sky-Scraper",
            Hero::Guise => "Guise",
            Hero::KNYFE => "K.N.Y.F.E.",
            Hero::TheNaturalist => "The Naturalist",
            Hero::Parse => "Parse",
            Hero::TheSentiels => "The Sentinels",
            Hero::Setback => "Setback",
            Hero::Benchmark => "Benchmark",
            Hero::Stuntman => "Stuntman",
            Hero::DoctorMedico => "Void Guard Dr. Medico",
            Hero::TheIdealist => "Void Guard The Idealist",
            Hero::Mainstay => "Void Guard Mainstay",
            Hero::Writhe => "Void Guard Writhe",
            Hero::AkashThriya => "Akash'Thriya",
            Hero::LaComodora => "La Comodora",
            Hero::TheHarpy => "The Harpy",
            Hero::Lifeline => "Lifeline",
            Hero::Luminary => "Luminary",
            Hero::Baccarat => "Baccarat",
            Hero::TheCricket => "The Cricket",
            Hero::Cypher => "Cypher",
            Hero::DocHavoc => "Doc Havoc",
            Hero::Drift => "Drift",
            Hero::Echelon => "Echelon",
            Hero::Gargoyle => "Gargoyle",
            Hero::Gyrosaur => "Gyrosaur",
            Hero::Impact => "Impact",
            Hero::TheKnight => "The Knight",
            Hero::LadyOfTheWood => "Lady of the Wood",
            Hero::MagnificentMara => "Magnificent Mara",
            Hero::Malichae => "Malichae",
            Hero::Necro => "Necro",
            Hero::Pyre => "Pyre",
            Hero::Quicksilver => "Quicksilver",
            Hero::Starlight => "Starlight",
            Hero::TheStranger => "The Stranger",
            Hero::TangoOne => "Tango One",
            Hero::Terminus => "Terminus",
            Hero::Titan => "Titan",
            Hero::Vanish => "Vanish",
        }
    }
}

impl Villain {
    pub const fn variant_count() -> usize {
        53
    }

    pub fn to_str(&self) -> &str {
        match self {
            Villain::BaronBlade => "Baron Blade",
            Villain::MadBomberBaronBlade => "Mad Bomber Baron Blade",
            Villain::CitizenDawn => "Citizen Dawn",
            Villain::GrandWarlordVoss => "Grand Warlord Voss",
            Villain::Omnitron => "Omnitron",
            Villain::OmnitronII => "Omnitron II",
            Villain::Ambuscade => "Ambuscade",
            Villain::TheChairman => "The Chairman",
            Villain::TheMatriarch => "The Matriarch",
            Villain::PlagueRat => "Plague Rat",
            Villain::Spite => "Spite",
            Villain::SpiteAgentOfGloom => "Spite: Agent of Gloom",
            Villain::AkashBhuta => "Akash'Bhuta",
            Villain::Apostate => "Apostate",
            Villain::TheEnnead => "The Ennead",
            Villain::Gloomweaver => "Gloomweaver",
            Villain::SkinwalkerGloomweaver => "Skinwalker Gloomweaver",
            Villain::MissInformation => "Miss Information",
            Villain::LaCapitan => "La Capitán",
            Villain::TheDreamer => "The Dreamer",
            Villain::IronLegacy => "Iron Legacy",
            Villain::Kismet => "Kismet",
            Villain::TricksterKismet => "Trickster Kismet",
            Villain::Deadline => "Deadline",
            Villain::Infinitor => "Infinitor",
            Villain::HeroicInfinitor => "Heroic Infinitor",
            Villain::KaargraWarfang => "Kaargra Warfang",
            Villain::Progeny => "Progeny",
            Villain::WagerMaster => "Wager Master",
            Villain::Chokepoint => "Chokepoint",
            Villain::Anathema => "Anathema",
            Villain::EvolvedAnathema => "Evolved Anathema",
            Villain::Celadroch => "Celadroch",
            Villain::Dendron => "Dendron",
            Villain::WindcolorDendron => "Windcolor Dendron",
            Villain::Dynamo => "Dynamo",
            Villain::Gray => "Gray",
            Villain::TheInfernalChoir => "The Infernal Choir",
            Villain::Menagerie => "Menagerie",
            Villain::TheMistressOfFate => "The Mistress of Fate",
            Villain::Mythos => "Mythos",
            Villain::Oriphel => "Oriphel",
            Villain::Outlander => "Outlander",
            Villain::Phase => "Phase",
            Villain::TheRam => "TheRam",
            Villain::Ram1929 => "1929 Ram",
            Villain::ScreamMachine => "Scream Machine",
            Villain::SwarmEater => "Swarm Eater",
            Villain::HivemindSwarmEater => "Hivemind Swarm Eater",
            Villain::Tiamat => "Tiamat",
            Villain::HydraTiamat => "Hydra Tiamat",
            Villain::Tiamat2199 => "Tiamat 2199",
            Villain::Vector => "Vector",
        }
    }
}

impl TeamVillain {
    pub const fn variant_count() -> usize {
        15
    }

    pub fn to_str(&self) -> &str {
        match self {
            TeamVillain::BaronBlade => "Baron Blade (Team)",
            TeamVillain::Ermine => "Ermine",
            TeamVillain::Friction => "Friction",
            TeamVillain::FrightTrain => "Fright Train",
            TeamVillain::Proletariat => "Proletariat",
            TeamVillain::Ambuscade => "Ambuscade (Team)",
            TeamVillain::Biomancer => "Biomancer",
            TeamVillain::Bugbear => "Bugbear",
            TeamVillain::LaCapitan => "La Capitan (Team)",
            TeamVillain::CitizensHammerAndAnvil => "Citizens Hammer & Anvil",
            TeamVillain::Greazer => "Greazer",
            TeamVillain::MissInformation => "Miss Information (Team)",
            TeamVillain::TheOperative => "The Operative",
            TeamVillain::PlagueRat => "Plague Rat (Team)",
            TeamVillain::SergeantSteel => "Sergeant Steel",
        }
    }
}

impl Environment {
    pub const fn variant_count() -> usize {
        42
    }

    pub fn to_str(&self) -> &str {
        match self {
            Environment::InsulaPrimalis => "Insula Primalis",
            Environment::Megalopolis => "Megalopolis",
            Environment::RuinsOfAtlantis => "Ruins of Atlantis",
            Environment::WagnerMarsBase => "Wagner Mars Base",
            Environment::SilverGulch1883 => "Silver Gulch 1883",
            Environment::PikeIndustrialComplex => "Pike Industrial Complex",
            Environment::RookCity => "Rook City",
            Environment::RealmOfDiscord => "Realm of Discord",
            Environment::TombOfAnubis => "Tomb of Anubis",
            Environment::TheFinalWasteland => "The Final Wasteland",
            Environment::TheBlock => "The Block",
            Environment::TimeCataclysm => "Time Cataclysm",
            Environment::DokThorathCapital => "Dok'Thorath Capital",
            Environment::TheEnclaveOfTheEndlings => "The Enclave of the Endlings",
            Environment::OmnitronIV => "Omnitron IV",
            Environment::FreedomTower => "Freedom Tower",
            Environment::MobileDefensePlatform => "Mobile Defence Platform",
            Environment::TheCourtOfBlood => "The Court of Blood",
            Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities => "Madame Mittermeiers Fantastical Festival of Conundrums and Curiosities",
            Environment::Magmaria => "Magmaria",
            Environment::TheTempleOfZhuLong => "The Temple of Zhu Long",
            Environment::TheCelestialTribunal => "The Celestial Tribunal",
            Environment::ChampionStudios => "Champion Studios",
            Environment::FortAdamant => "Fort Adamant",
            Environment::MaerynianRefuge => "Maerynian Refuge",
            Environment::Mordengrad => "Mordengrad",
            Environment::NexusOfTheVoid => "Nexus of the Void",
            Environment::BlackwoodForest => "Blackwood Forest",
            Environment::CatchwaterHarbor1929 => "Catchwater Harbor 1929",
            Environment::TheChasmOfAThousandNights => "The Chasm of a Thousand Nights",
            Environment::TheCybersphere => "The Cybersphere",
            Environment::DungeonsOfTerror => "Dungeons of Terror",
            Environment::FSCContinuanceWanderer => "F.S.C. Continuance Wanderer",
            Environment::HalberdERC => "Halberd E.R.C.",
            Environment::NightloreCitadel => "Nightlore Citadel",
            Environment::Northspar => "Northspar",
            Environment::OblaskCrater => "Oblask Crater",
            Environment::StSimeonsCatacombs => "St. Simeons Catacombs",
            Environment::SuperstormAkela => "Superstorm Akela",
            Environment::Vault5 => "Vault 5",
            Environment::TheWanderingIsle => "The Wandering Isle",
            Environment::WindmillCity => "Windmill City",
        }
    }
}

impl Item {
    pub fn from_str(str: &str) -> Option<Item> {
        match str {
            "Absolute Zero" => Some(Item::Hero(Hero::AbsoluteZero)),
            "Bunker" => Some(Item::Hero(Hero::Bunker)),
            "Fanatic" => Some(Item::Hero(Hero::Fanatic)),
            "Haka" => Some(Item::Hero(Hero::Haka)),
            "Legacy" => Some(Item::Hero(Hero::Legacy)),
            "Ra" => Some(Item::Hero(Hero::Ra)),
            "Tachyon" => Some(Item::Hero(Hero::Tachyon)),
            "Tempest" => Some(Item::Hero(Hero::Tempest)),
            "The Visionary" => Some(Item::Hero(Hero::Visionary)),
            "Wraith" => Some(Item::Hero(Hero::Wraith)),
            "Unity" => Some(Item::Hero(Hero::Unity)),
            "Expatriette" => Some(Item::Hero(Hero::Expatriette)),
            "Mister Fixer" => Some(Item::Hero(Hero::MisterFixer)),
            "The Argent Adept" => Some(Item::Hero(Hero::ArgentAdept)),
            "Nightmist" => Some(Item::Hero(Hero::Nightmist)),
            "The Scholar" => Some(Item::Hero(Hero::TheScholar)),
            "Chrono-Ranger" => Some(Item::Hero(Hero::ChronoRanger)),
            "Omnitron-X" => Some(Item::Hero(Hero::OmnitronX)),
            "Captain Cosmic" => Some(Item::Hero(Hero::CaptainCosmic)),
            "Sky-Scraper" => Some(Item::Hero(Hero::SkyScraper)),
            "Guise" => Some(Item::Hero(Hero::Guise)),
            "K.N.Y.F.E." => Some(Item::Hero(Hero::KNYFE)),
            "The Naturalist" => Some(Item::Hero(Hero::TheNaturalist)),
            "Parse" => Some(Item::Hero(Hero::Parse)),
            "The Sentinels" => Some(Item::Hero(Hero::TheSentiels)),
            "Setback" => Some(Item::Hero(Hero::Setback)),
            "Benchmark" => Some(Item::Hero(Hero::Benchmark)),
            "Stuntman" => Some(Item::Hero(Hero::Stuntman)),
            "Void Guard Doctor Medico" => Some(Item::Hero(Hero::DoctorMedico)),
            "Void Guard The Idealist" => Some(Item::Hero(Hero::TheIdealist)),
            "Void Guard Mainstay" => Some(Item::Hero(Hero::Mainstay)),
            "Void Guard Writhe" => Some(Item::Hero(Hero::Writhe)),
            "Akash'Thriya" => Some(Item::Hero(Hero::AkashThriya)),
            "La Comodora" => Some(Item::Hero(Hero::LaComodora)),
            "The Harpy" => Some(Item::Hero(Hero::TheHarpy)),
            "Lifeline" => Some(Item::Hero(Hero::Lifeline)),
            "Luminary" => Some(Item::Hero(Hero::Luminary)),
            "Baron Blade" => Some(Item::Villain(Villain::BaronBlade)),
            "Citizen Dawn" => Some(Item::Villain(Villain::CitizenDawn)),
            "Grand Warlord Voss" => Some(Item::Villain(Villain::GrandWarlordVoss)),
            "Omnitron" => Some(Item::Villain(Villain::Omnitron)),
            "Ambuscade" => Some(Item::Villain(Villain::Ambuscade)),
            "The Chairman" => Some(Item::Villain(Villain::TheChairman)),
            "The Matriarch" => Some(Item::Villain(Villain::TheMatriarch)),
            "Plague Rat" => Some(Item::Villain(Villain::PlagueRat)),
            "Spite" => Some(Item::Villain(Villain::Spite)),
            "Akash'Bhuta" => Some(Item::Villain(Villain::AkashBhuta)),
            "Apostate" => Some(Item::Villain(Villain::Apostate)),
            "The Ennead" => Some(Item::Villain(Villain::TheEnnead)),
            "Gloomweaver" => Some(Item::Villain(Villain::Gloomweaver)),
            "Miss Information" => Some(Item::Villain(Villain::MissInformation)),
            "La Capitán" => Some(Item::Villain(Villain::LaCapitan)),
            "The Dreamer" => Some(Item::Villain(Villain::TheDreamer)),
            "Iron Legacy" => Some(Item::Villain(Villain::IronLegacy)),
            "Kismet" => Some(Item::Villain(Villain::Kismet)),
            "Deadline" => Some(Item::Villain(Villain::Deadline)),
            "Infinitor" => Some(Item::Villain(Villain::Infinitor)),
            "Kaargra Warfang" => Some(Item::Villain(Villain::KaargraWarfang)),
            "Progeny" => Some(Item::Villain(Villain::Progeny)),
            "Wager Master" => Some(Item::Villain(Villain::WagerMaster)),
            "Chokepoint" => Some(Item::Villain(Villain::Chokepoint)),
            "Baron Blade (Team)" => Some(Item::TeamVillain(TeamVillain::BaronBlade)),
            "Ermine" => Some(Item::TeamVillain(TeamVillain::Ermine)),
            "Friction" => Some(Item::TeamVillain(TeamVillain::Friction)),
            "Fright Train" => Some(Item::TeamVillain(TeamVillain::FrightTrain)),
            "Proletariat" => Some(Item::TeamVillain(TeamVillain::Proletariat)),
            "Ambuscade (Team)" => Some(Item::TeamVillain(TeamVillain::Ambuscade)),
            "Biomancer" => Some(Item::TeamVillain(TeamVillain::Biomancer)),
            "Bugbear" => Some(Item::TeamVillain(TeamVillain::Bugbear)),
            "La Capitan (Team)" => Some(Item::TeamVillain(TeamVillain::LaCapitan)),
            "Citizens Hammer & Anvil" => Some(Item::TeamVillain(TeamVillain::CitizensHammerAndAnvil)),
            "Greazer" => Some(Item::TeamVillain(TeamVillain::Greazer)),
            "Miss Information (Team)" => Some(Item::TeamVillain(TeamVillain::MissInformation)),
            "The Operative" => Some(Item::TeamVillain(TeamVillain::TheOperative)),
            "Plague Rat (Team)" => Some(Item::TeamVillain(TeamVillain::PlagueRat)),
            "Sergeant Steel" => Some(Item::TeamVillain(TeamVillain::SergeantSteel)),
            "Insula Primalis" => Some(Item::Environment(Environment::InsulaPrimalis)),
            "Megalopolis" => Some(Item::Environment(Environment::Megalopolis)),
            "Ruins of Atlantis" => Some(Item::Environment(Environment::RuinsOfAtlantis)),
            "Wagner Mars Base" => Some(Item::Environment(Environment::WagnerMarsBase)),
            "Silver Gulch, 1883" => Some(Item::Environment(Environment::SilverGulch1883)),
            "Pike Industrial Complex" => Some(Item::Environment(Environment::PikeIndustrialComplex)),
            "Rook City" => Some(Item::Environment(Environment::RookCity)),
            "Realm of Discord" => Some(Item::Environment(Environment::RealmOfDiscord)),
            "Tomb of Anubis" => Some(Item::Environment(Environment::TombOfAnubis)),
            "The Final Wasteland" => Some(Item::Environment(Environment::TheFinalWasteland)),
            "The Block" => Some(Item::Environment(Environment::TheBlock)),
            "Time Cataclysm" => Some(Item::Environment(Environment::TimeCataclysm)),
            "Dok'Thorath Capital" => Some(Item::Environment(Environment::DokThorathCapital)),
            "The Enclave of the Endlings" => Some(Item::Environment(Environment::TheEnclaveOfTheEndlings)),
            "Omnitron IV" => Some(Item::Environment(Environment::OmnitronIV)),
            "Freedom Tower" => Some(Item::Environment(Environment::FreedomTower)),
            "Mobile Defence Platform" => Some(Item::Environment(Environment::MobileDefensePlatform)),
            "Court of Blood" => Some(Item::Environment(Environment::TheCourtOfBlood)),
            "Madame Mittermeier's Fantastical Festival of Conundrums and Curiosities" => Some(Item::Environment(Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities)),
            "Magmaria" => Some(Item::Environment(Environment::Magmaria)),
            "The Temple of Zhu Long" => Some(Item::Environment(Environment::TheTempleOfZhuLong)),
            "The Celestial Tribunal" => Some(Item::Environment(Environment::TheCelestialTribunal)),
            "Champion Studios" => Some(Item::Environment(Environment::ChampionStudios)),
            "Fort Adamant" => Some(Item::Environment(Environment::FortAdamant)),
            "Maerynian Refuge" => Some(Item::Environment(Environment::MaerynianRefuge)),
            "Mordengrad" => Some(Item::Environment(Environment::Mordengrad)),
            "Nexus of the Void" => Some(Item::Environment(Environment::NexusOfTheVoid)),
            "Scion of Oblivaeon" => Some(Item::Scion),
            "Mad Bomber Baron Blade" => Some(Item::Villain(Villain::MadBomberBaronBlade)),
            "Omnitron II" => Some(Item::Villain(Villain::OmnitronII)),
            "Spite - Agent of Gloom" => Some(Item::Villain(Villain::SpiteAgentOfGloom)),
            "Skinwalker Gloomweaver" => Some(Item::Villain(Villain::SkinwalkerGloomweaver)),
            "Trickster Kismet" => Some(Item::Villain(Villain::TricksterKismet)),
            "Heroic Infinitor" => Some(Item::Villain(Villain::HeroicInfinitor)),
            "America's Greatest Legacy" => Some(Item::Variant(Variant::AmericasGreatestLegacy)),
            "America's Newest Legacy" => Some(Item::Variant(Variant::AmericasNewestLegacy)),
            "Dark Visionary" => Some(Item::Variant(Variant::DarkVisionary)),
            "The Eternal Haka" => Some(Item::Variant(Variant::TheEternalHaka)),
            "G.I. Bunker" => Some(Item::Variant(Variant::GIBunker)),
            "Ra - Horus of Two Horizons" => Some(Item::Variant(Variant::RaHorusOfTwoHorizons)),
            "Ra - Setting Sun" => Some(Item::Variant(Variant::RaSettingSun)),
            "Redeemer Fanatic" => Some(Item::Variant(Variant::RedeemerFanatic)),
            "Rook City Wraith" => Some(Item::Variant(Variant::RookCityWraith)),
            "The Super-Scientific Tachyon" => Some(Item::Variant(Variant::TheSuperScientificTachyon)),
            "The Visionary Unleashed" => Some(Item::Variant(Variant::TheVisionaryUnleashed)),
            "Captain Cosmic Requital" => Some(Item::Variant(Variant::CaptainCosmicRequital)),
            "Chrono-Ranger The Best of Times" => Some(Item::Variant(Variant::ChronoRangerTheBestOfTimes)),
            "Dark Conductor Argent Adept" => Some(Item::Variant(Variant::DarkConductorArgentAdept)),
            "Extremist Sky-Scraper" => Some(Item::Variant(Variant::ExtremistSkyScraper)),
            "Omnitron-U" => Some(Item::Variant(Variant::OmnitronU)),
            "Santa Guise" => Some(Item::Variant(Variant::SantaGuise)),
            "The Scholar of the Infinite" => Some(Item::Variant(Variant::TheScholarOfTheInfinite)),
            "Action Hero Stuntman" => Some(Item::Variant(Variant::ActionHeroStuntman)),
            "Akash'Thriya - Spirit of the Void" => Some(Item::Variant(Variant::AkashThriyaSpiritOfTheVoid)),
            "Benchmark Supply & Demand" => Some(Item::Variant(Variant::BenchmarkSupplyAndDemand)),
            "Heroic Luminary" => Some(Item::Variant(Variant::HeroicLuminary)),
            "K.N.Y.F.E. - Rogue Agent" => Some(Item::Variant(Variant::KNYFERogueAgent)),
            "La Comodora - Curse of the Black Spot" => Some(Item::Variant(Variant::LaComodoraCurseOfTheBlackSpot)),
            "Lifeline Blood Mage" => Some(Item::Variant(Variant::LifelineBloodMage)),
            "Parse - Fugue State" => Some(Item::Variant(Variant::ParseFugueState)),
            "The Adamant Sentinels" => Some(Item::Variant(Variant::TheAdamantSentinels)),
            "The Hunted Naturalist" => Some(Item::Variant(Variant::TheHuntedNaturalist)),
            "Termi-Nation Bunker" => Some(Item::Variant(Variant::TermiNationBunker)),
            "Termi-Nation Absolute Zero" => Some(Item::Variant(Variant::TermiNationAbsoluteZero)),
            "Termi-Nation Unity" => Some(Item::Variant(Variant::TermiNationUnity)),
            "Freedom Six Absolute Zero" => Some(Item::Variant(Variant::FreedomSixAbsoluteZero)),
            "Freedom Six Bunker" => Some(Item::Variant(Variant::FreedomSixBunker)),
            "Freedom Six Tachyon" => Some(Item::Variant(Variant::FreedomSixTachyon)),
            "Freedom Six Tempest" => Some(Item::Variant(Variant::FreedomSixTempest)),
            "Freedom Six Wraith" => Some(Item::Variant(Variant::FreedomSixWraith)),
            "Freedom Six Unity" => Some(Item::Variant(Variant::FreedomSixUnity)),
            "Dark Watch Expatriette" => Some(Item::Variant(Variant::DarkWatchExpatriette)),
            "Dark Watch Mister Fixer" => Some(Item::Variant(Variant::DarkWatchMisterFixer)),
            "Dark Watch Nightmist" => Some(Item::Variant(Variant::DarkWatchNightmist)),
            "Dark Watch Setback" => Some(Item::Variant(Variant::DarkWatchSetback)),
            "Dark Watch Harpy" => Some(Item::Variant(Variant::DarkWatchHarpy)),
            "Prime Wardens Argent Adept" => Some(Item::Variant(Variant::PrimeWardensArgentAdept)),
            "Prime Wardens Captain Cosmic" => Some(Item::Variant(Variant::PrimeWardensCaptainCosmic)),
            "Prime Wardens Fanatic" => Some(Item::Variant(Variant::PrimeWardensFanatic)),
            "Prime Wardens Haka" => Some(Item::Variant(Variant::PrimeWardensHaka)),
            "Prime Wardens Tempest" => Some(Item::Variant(Variant::PrimeWardensTempest)),
            "Xtreme Prime Wardens Argent Adept" => Some(Item::Variant(Variant::XtremePrimeWardensArgentAdept)),
            "Xtreme Prime Wardens Tempest" => Some(Item::Variant(Variant::XtremePrimeWardensTempest)),
            "Xtreme Prime Wardens Captain Cosmic" => Some(Item::Variant(Variant::XtremePrimeWardensCaptainCosmic)),
            "Xtreme Prime Wardens Fanatic" => Some(Item::Variant(Variant::XtremePrimeWardensFanatic)),
            "Xtreme Prime Wardens Haka" => Some(Item::Variant(Variant::XtremePrimeWardensHaka)),
            "Freedom Five Absolute Zero" => Some(Item::Variant(Variant::FreedomFiveAbsoluteZero)),
            "Freedom Five Bunker" => Some(Item::Variant(Variant::FreedomFiveBunker)),
            "Freedom Five Wraith" => Some(Item::Variant(Variant::FreedomFiveWraith)),
            "Freedom Five Tachyon" => Some(Item::Variant(Variant::FreedomFiveTachyon)),
            "Freedom Five Legacy" => Some(Item::Variant(Variant::FreedomFiveLegacy)),
            "Super Sentai Idealist" => Some(Item::Variant(Variant::SuperSentaiIdealist)),
            "Dr. Medico Malpractice" => Some(Item::Variant(Variant::DrMedicoMalpractice)),
            "Cosmic Inventor Writhe" => Some(Item::Variant(Variant::CosmicInventorWrithe)),
            "Road Warrior Mainstay" => Some(Item::Variant(Variant::RoadWarriorMainstay)),
            "Completionist Guise" => Some(Item::Variant(Variant::CompletionistGuise)),
            "Baccarat Ace of Swords" => Some(Item::Variant(Variant::BaccaratAceOfSwords)),
            "Baccarat Ace of Sorrows" => Some(Item::Variant(Variant::BaccaratAceOfSorrows)),
            "Baccarat 1929" => Some(Item::Variant(Variant::Baccarat1929)),
            "First Response Cricket" => Some(Item::Variant(Variant::FirstResponseCricket)),
            "The Cricket Renegade" => Some(Item::Variant(Variant::TheCricketRenegade)),
            "The Cricket Wasteland Ronin" => Some(Item::Variant(Variant::TheCricketWastelandRonin)),
            "First Response Cypher" => Some(Item::Variant(Variant::FirstResponseCypher)),
            "Cypher Swarming Protocol" => Some(Item::Variant(Variant::CypherSwarmingProtocol)),
            "First Response Doc Havoc" => Some(Item::Variant(Variant::FirstResponseDocHavoc)),
            "Doc Havoc 2199" => Some(Item::Variant(Variant::DocHavoc2199)),
            "Drift Through the Breach" => Some(Item::Variant(Variant::DriftThroughTheBreach)),
            "Drift 1929 & 2199" => Some(Item::Variant(Variant::Drift1929And2199)),
            "Drift 1609" => Some(Item::Variant(Variant::Drift1609)),
            "Drift 1789" => Some(Item::Variant(Variant::Drift1789)),
            "Test Subject Drift" => Some(Item::Variant(Variant::TestSubjectDrift)),
            "First Response Echelon" => Some(Item::Variant(Variant::FirstResponseEchelon)),
            "Echelon 2199" => Some(Item::Variant(Variant::Echelon2199)),
            "Gargoyle Wasteland Ronin" => Some(Item::Variant(Variant::GargoyleWastelandRonin)),
            "Gargoyle 2199" => Some(Item::Variant(Variant::Gargoyle2199)),
            "Gargoyle Dragon Ranger" => Some(Item::Variant(Variant::GargoyleDragonRanger)),
            "Gargoyle Infiltrator" => Some(Item::Variant(Variant::GargoyleInfiltrator)),
            "Gyrosaur Speed Demon" => Some(Item::Variant(Variant::GyrosaurSpeedDemon)),
            "Gyrosaur Renegade" => Some(Item::Variant(Variant::GyrosaurRenegade)),
            "Captain Gyrosaur" => Some(Item::Variant(Variant::CaptainGyrosaur)),
            "Impact Renegade" => Some(Item::Variant(Variant::ImpactRenegade)),
            "Impact Wasteland Ronin" => Some(Item::Variant(Variant::ImpactWastelandRonin)),
            "The Fair Knight" => Some(Item::Variant(Variant::TheFairKnight)),
            "The Berserker Knight" => Some(Item::Variant(Variant::TheBerserkerKnight)),
            "The Knight 1929" => Some(Item::Variant(Variant::TheKnight1929)),
            "The Knights Wasteland Ronin" => Some(Item::Variant(Variant::TheKnightsWastelandRonin)),
            "Lady of the Wood Season of Change" => Some(Item::Variant(Variant::LadyOfTheWoodSeasonOfChange)),
            "Ministry of Strategic Science Lady of the Wood" => Some(Item::Variant(Variant::MinistryOfStrategicScienceLadyOfTheWood)),
            "Lady of the Wood 2199" => Some(Item::Variant(Variant::LadyOfTheWood2199)),
            "Ministry of Strategic Science Magnificent Mara" => Some(Item::Variant(Variant::MinistryOfStrategicScienceMagnificentMara)),
            "Magnificent Mara 1929" => Some(Item::Variant(Variant::MagnificentMara1929)),
            "Shardmaster Malichae" => Some(Item::Variant(Variant::ShardmasterMalichae)),
            "Ministry of Strategic Science Malichae" => Some(Item::Variant(Variant::MinistryOfStrategicScienceMalichae)),
            "Necro Warden of Chaos" => Some(Item::Variant(Variant::NecroWardenOfChaos)),
            "Necro 1929" => Some(Item::Variant(Variant::Necro1929)),
            "Necro Last of the Forgotten Order" => Some(Item::Variant(Variant::NecroLastOfTheForgottenOrder)),
            "The Unstable Pyre" => Some(Item::Variant(Variant::TheUnstablePyre)),
            "Pyre Wasteland Ronin" => Some(Item::Variant(Variant::PyreWastelandRonin)),
            "Pyre Expedition Oblask" => Some(Item::Variant(Variant::PyreExpeditionOblask)),
            "The Uncanny Quicksilver" => Some(Item::Variant(Variant::TheUncannyQuicksilver)),
            "Quicksilver Renegade" => Some(Item::Variant(Variant::QuicksilverRenegade)),
            "Harbinger Quicksilver" => Some(Item::Variant(Variant::HarbingerQuicksilver)),
            "Starlight Genesis" => Some(Item::Variant(Variant::StarlightGenesis)),
            "Nightlore Council Starlight" => Some(Item::Variant(Variant::NightloreCouncilStarlight)),
            "Starlight Area-51" => Some(Item::Variant(Variant::StarlightArea51)),
            "The Runecarved Stranger" => Some(Item::Variant(Variant::TheRunecarvedStranger)),
            "The Stranger 1929" => Some(Item::Variant(Variant::TheStranger1929)),
            "The Stranger Wasteland Ronin" => Some(Item::Variant(Variant::TheStrangerWastelandRonin)),
            "The Stranger in the Corn" => Some(Item::Variant(Variant::TheStrangerInTheCorn)),
            "Tango One Ghost Ops" => Some(Item::Variant(Variant::TangoOneGhostOps)),
            "Tango One 1929" => Some(Item::Variant(Variant::TangoOne1929)),
            "Tango One Creed of the Sniper" => Some(Item::Variant(Variant::TangoOneCreedOfTheSniper)),
            "Ministry of Strategic Science Terminus" => Some(Item::Variant(Variant::MinistryOfStrategicScienceTerminus)),
            "Terminus 2199" => Some(Item::Variant(Variant::Terminus2199)),
            "Ministry of Strategic Science Titan" => Some(Item::Variant(Variant::MinistryOfStrategicScienceTitan)),
            "Titan 2199" => Some(Item::Variant(Variant::Titan2199)),
            "Titan Oni" => Some(Item::Variant(Variant::TitanOni)),
            "First Response Vanish" => Some(Item::Variant(Variant::FirstResponseVanish)),
            "Vanish 1929" => Some(Item::Variant(Variant::Vanish1929)),
            "Vanish Tomb of Thieves" => Some(Item::Variant(Variant::VanishTombOfThieves)),
            "Baccarat" => Some(Item::Hero(Hero::Baccarat)),
            "The Cricket" => Some(Item::Hero(Hero::TheCricket)),
            "Cypher" => Some(Item::Hero(Hero::Cypher)),
            "Doc Havoc" => Some(Item::Hero(Hero::DocHavoc)),
            "Drift" => Some(Item::Hero(Hero::Drift)),
            "Echelon" => Some(Item::Hero(Hero::Echelon)),
            "Gargoyle" => Some(Item::Hero(Hero::Gargoyle)),
            "Gyrosaur " => Some(Item::Hero(Hero::Gyrosaur)),
            "Impact" => Some(Item::Hero(Hero::Impact)),
            "The Knight" => Some(Item::Hero(Hero::TheKnight)),
            "Lady of the Wood" => Some(Item::Hero(Hero::LadyOfTheWood)),
            "Magnificent Mara" => Some(Item::Hero(Hero::MagnificentMara)),
            "Malichae" => Some(Item::Hero(Hero::Malichae)),
            "Necro" => Some(Item::Hero(Hero::Necro)),
            "Pyre" => Some(Item::Hero(Hero::Pyre)),
            "Quicksilver" => Some(Item::Hero(Hero::Quicksilver)),
            "Starlight" => Some(Item::Hero(Hero::Starlight)),
            "The Stranger" => Some(Item::Hero(Hero::TheStranger)),
            "Tango One" => Some(Item::Hero(Hero::TangoOne)),
            "Terminus" => Some(Item::Hero(Hero::Terminus)),
            "Titan" => Some(Item::Hero(Hero::Titan)),
            "Vanish" => Some(Item::Hero(Hero::Vanish)),
            "Blackwood Forest" => Some(Item::Environment(Environment::BlackwoodForest)),
            "Catchwater Harbor 1929" => Some(Item::Environment(Environment::CatchwaterHarbor1929)),
            "The Chasm of a Thousand Nights" => Some(Item::Environment(Environment::TheChasmOfAThousandNights)),
            "The Cybersphere" => Some(Item::Environment(Environment::TheCybersphere)),
            "Dungeons of Terror" => Some(Item::Environment(Environment::DungeonsOfTerror)),
            "F.S.C. Continuance Wanderer" => Some(Item::Environment(Environment::FSCContinuanceWanderer)),
            "Halberd E.R.C." => Some(Item::Environment(Environment::HalberdERC)),
            "Nightlore Citadel" => Some(Item::Environment(Environment::NightloreCitadel)),
            "Northspar" => Some(Item::Environment(Environment::Northspar)),
            "Oblask Crater" => Some(Item::Environment(Environment::OblaskCrater)),
            "St. Simeon's Catacombs" => Some(Item::Environment(Environment::StSimeonsCatacombs)),
            "Superstorm Akela" => Some(Item::Environment(Environment::SuperstormAkela)),
            "Vault 5" => Some(Item::Environment(Environment::Vault5)),
            "The Wandering Isle" => Some(Item::Environment(Environment::TheWanderingIsle)),
            "Windmill City" => Some(Item::Environment(Environment::WindmillCity)),
            "Anathema" => Some(Item::Villain(Villain::Anathema)),
            "Evolved Anathema" => Some(Item::Villain(Villain::EvolvedAnathema)),
            "Celadroch" => Some(Item::Villain(Villain::Celadroch)),
            "Dendron" => Some(Item::Villain(Villain::Dendron)),
            "Windcolor Dendron" => Some(Item::Villain(Villain::WindcolorDendron)),
            "Dynamo" => Some(Item::Villain(Villain::Dynamo)),
            "Gray" => Some(Item::Villain(Villain::Gray)),
            "The Infernal Choir" => Some(Item::Villain(Villain::TheInfernalChoir)),
            "Menagerie" => Some(Item::Villain(Villain::Menagerie)),
            "The Mistress of Fate" => Some(Item::Villain(Villain::TheMistressOfFate)),
            "Mythos" => Some(Item::Villain(Villain::Mythos)),
            "Oriphel" => Some(Item::Villain(Villain::Oriphel)),
            "Outlander" => Some(Item::Villain(Villain::Outlander)),
            "Phase" => Some(Item::Villain(Villain::Phase)),
            "The Ram" => Some(Item::Villain(Villain::TheRam)),
            "1929 Ram" => Some(Item::Villain(Villain::Ram1929)),
            "Scream Machine" => Some(Item::Villain(Villain::ScreamMachine)),
            "Swarm Eater" => Some(Item::Villain(Villain::SwarmEater)),
            "Hivemind Swarm Eater" => Some(Item::Villain(Villain::HivemindSwarmEater)),
            "Tiamat" => Some(Item::Villain(Villain::Tiamat)),
            "Hydra Tiamat" => Some(Item::Villain(Villain::HydraTiamat)),
            "Tiamat 2199" => Some(Item::Villain(Villain::Tiamat2199)),
            "Vector" => Some(Item::Villain(Villain::Vector)),
            "1 Undo" => Some(Item::Filler),
            _ => None,
        }
    }
}

impl Location {
    pub fn from_str(str: &str) -> Option<Location> {
        match str {
            "Baron Blade - Normal" => Some(Location::Villain((Villain::BaronBlade, 0))),
            "Baron Blade - Advanced" => Some(Location::Villain((Villain::BaronBlade, 1))),
            "Baron Blade - Challenge" => Some(Location::Villain((Villain::BaronBlade, 2))),
            "Baron Blade - Ultimate" => Some(Location::Villain((Villain::BaronBlade, 3))),
            "Mad Bomber Baron Blade - Normal" => Some(Location::Villain((Villain::MadBomberBaronBlade, 0))),
            "Mad Bomber Baron Blade - Advanced" => Some(Location::Villain((Villain::MadBomberBaronBlade, 1))),
            "Mad Bomber Baron Blade - Challenge" => Some(Location::Villain((Villain::MadBomberBaronBlade, 2))),
            "Mad Bomber Baron Blade - Ultimate" => Some(Location::Villain((Villain::MadBomberBaronBlade, 3))),
            "Citizen Dawn - Normal" => Some(Location::Villain((Villain::CitizenDawn, 0))),
            "Citizen Dawn - Advanced" => Some(Location::Villain((Villain::CitizenDawn, 1))),
            "Citizen Dawn - Challenge" => Some(Location::Villain((Villain::CitizenDawn, 2))),
            "Citizen Dawn - Ultimate" => Some(Location::Villain((Villain::CitizenDawn, 3))),
            "Grand Warlord Voss - Normal" => Some(Location::Villain((Villain::GrandWarlordVoss, 0))),
            "Grand Warlord Voss - Advanced" => Some(Location::Villain((Villain::GrandWarlordVoss, 1))),
            "Grand Warlord Voss - Challenge" => Some(Location::Villain((Villain::GrandWarlordVoss, 2))),
            "Grand Warlord Voss - Ultimate" => Some(Location::Villain((Villain::GrandWarlordVoss, 3))),
            "Omnitron - Normal" => Some(Location::Villain((Villain::Omnitron, 0))),
            "Omnitron - Advanced" => Some(Location::Villain((Villain::Omnitron, 1))),
            "Omnitron - Challenge" => Some(Location::Villain((Villain::Omnitron, 2))),
            "Omnitron - Ultimate" => Some(Location::Villain((Villain::Omnitron, 3))),
            "Omnitron II - Normal" => Some(Location::Villain((Villain::OmnitronII, 0))),
            "Omnitron II - Advanced" => Some(Location::Villain((Villain::OmnitronII, 1))),
            "Omnitron II - Challenge" => Some(Location::Villain((Villain::OmnitronII, 2))),
            "Omnitron II - Ultimate" => Some(Location::Villain((Villain::OmnitronII, 3))),
            "Ambuscade - Normal" => Some(Location::Villain((Villain::Ambuscade, 0))),
            "Ambuscade - Advanced" => Some(Location::Villain((Villain::Ambuscade, 1))),
            "Ambuscade - Challenge" => Some(Location::Villain((Villain::Ambuscade, 2))),
            "Ambuscade - Ultimate" => Some(Location::Villain((Villain::Ambuscade, 3))),
            "The Chairman - Normal" => Some(Location::Villain((Villain::TheChairman, 0))),
            "The Chairman - Advanced" => Some(Location::Villain((Villain::TheChairman, 1))),
            "The Chairman - Challenge" => Some(Location::Villain((Villain::TheChairman, 2))),
            "The Chairman - Ultimate" => Some(Location::Villain((Villain::TheChairman, 3))),
            "The Matriarch - Normal" => Some(Location::Villain((Villain::TheMatriarch, 0))),
            "The Matriarch - Advanced" => Some(Location::Villain((Villain::TheMatriarch, 1))),
            "The Matriarch - Challenge" => Some(Location::Villain((Villain::TheMatriarch, 2))),
            "The Matriarch - Ultimate" => Some(Location::Villain((Villain::TheMatriarch, 3))),
            "Plague Rat - Normal" => Some(Location::Villain((Villain::PlagueRat, 0))),
            "Plague Rat - Advanced" => Some(Location::Villain((Villain::PlagueRat, 1))),
            "Plague Rat - Challenge" => Some(Location::Villain((Villain::PlagueRat, 2))),
            "Plague Rat - Ultimate" => Some(Location::Villain((Villain::PlagueRat, 3))),
            "Spite - Normal" => Some(Location::Villain((Villain::Spite, 0))),
            "Spite - Advanced" => Some(Location::Villain((Villain::Spite, 1))),
            "Spite - Challenge" => Some(Location::Villain((Villain::Spite, 2))),
            "Spite - Ultimate" => Some(Location::Villain((Villain::Spite, 3))),
            "Spite - Agent of Gloom - Normal" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 0))),
            "Spite - Agent of Gloom - Advanced" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 1))),
            "Spite - Agent of Gloom & Skinwalker Gloomweaver - Challenge" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 2))),
            "Spite - Agent of Gloom & Skinwalker Gloomweaver - Ultimate" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 3))),
            "Akash'Bhuta - Normal" => Some(Location::Villain((Villain::AkashBhuta, 0))),
            "Akash'Bhuta - Advanced" => Some(Location::Villain((Villain::AkashBhuta, 1))),
            "Akash'Bhuta - Challenge" => Some(Location::Villain((Villain::AkashBhuta, 2))),
            "Akash'Bhuta - Ultimate" => Some(Location::Villain((Villain::AkashBhuta, 3))),
            "Apostate - Normal" => Some(Location::Villain((Villain::Apostate, 0))),
            "Apostate - Advanced" => Some(Location::Villain((Villain::Apostate, 1))),
            "Apostate - Challenge" => Some(Location::Villain((Villain::Apostate, 2))),
            "Apostate - Ultimate" => Some(Location::Villain((Villain::Apostate, 3))),
            "The Ennead - Normal" => Some(Location::Villain((Villain::TheEnnead, 0))),
            "The Ennead - Advanced" => Some(Location::Villain((Villain::TheEnnead, 1))),
            "The Ennead - Challenge" => Some(Location::Villain((Villain::TheEnnead, 2))),
            "The Ennead - Ultimate" => Some(Location::Villain((Villain::TheEnnead, 3))),
            "Gloomweaver - Normal" => Some(Location::Villain((Villain::Gloomweaver, 0))),
            "Gloomweaver - Advanced" => Some(Location::Villain((Villain::Gloomweaver, 1))),
            "Gloomweaver - Challenge" => Some(Location::Villain((Villain::Gloomweaver, 2))),
            "Gloomweaver - Ultimate" => Some(Location::Villain((Villain::Gloomweaver, 3))),
            "Skinwalker Gloomweaver - Normal" => Some(Location::Villain((Villain::SkinwalkerGloomweaver, 0))),
            "Skinwalker Gloomweaver - Advanced" => Some(Location::Villain((Villain::SkinwalkerGloomweaver, 1))),
            "Miss Information - Normal" => Some(Location::Villain((Villain::MissInformation, 0))),
            "Miss Information - Advanced" => Some(Location::Villain((Villain::MissInformation, 1))),
            "Miss Information - Challenge" => Some(Location::Villain((Villain::MissInformation, 2))),
            "Miss Information - Ultimate" => Some(Location::Villain((Villain::MissInformation, 3))),
            "La Capitán - Normal" => Some(Location::Villain((Villain::LaCapitan, 0))),
            "La Capitán - Advanced" => Some(Location::Villain((Villain::LaCapitan, 1))),
            "La Capitán - Challenge" => Some(Location::Villain((Villain::LaCapitan, 2))),
            "La Capitán - Ultimate" => Some(Location::Villain((Villain::LaCapitan, 3))),
            "The Dreamer - Normal" => Some(Location::Villain((Villain::TheDreamer, 0))),
            "The Dreamer - Advanced" => Some(Location::Villain((Villain::TheDreamer, 1))),
            "The Dreamer - Challenge" => Some(Location::Villain((Villain::TheDreamer, 2))),
            "The Dreamer - Ultimate" => Some(Location::Villain((Villain::TheDreamer, 3))),
            "Iron Legacy - Normal" => Some(Location::Villain((Villain::IronLegacy, 0))),
            "Iron Legacy - Advanced" => Some(Location::Villain((Villain::IronLegacy, 1))),
            "Iron Legacy - Challenge" => Some(Location::Villain((Villain::IronLegacy, 2))),
            "Iron Legacy - Ultimate" => Some(Location::Villain((Villain::IronLegacy, 3))),
            "Kismet - Normal" => Some(Location::Villain((Villain::Kismet, 0))),
            "Kismet - Advanced" => Some(Location::Villain((Villain::Kismet, 1))),
            "Kismet - Challenge" => Some(Location::Villain((Villain::Kismet, 2))),
            "Kismet - Ultimate" => Some(Location::Villain((Villain::Kismet, 3))),
            "Trickster Kismet - Normal" => Some(Location::Villain((Villain::TricksterKismet, 0))),
            "Trickster Kismet - Advanced" => Some(Location::Villain((Villain::TricksterKismet, 1))),
            "Trickster Kismet - Challenge" => Some(Location::Villain((Villain::TricksterKismet, 2))),
            "Trickster Kismet - Ultimate" => Some(Location::Villain((Villain::TricksterKismet, 3))),
            "Deadline - Normal" => Some(Location::Villain((Villain::Deadline, 0))),
            "Deadline - Advanced" => Some(Location::Villain((Villain::Deadline, 1))),
            "Deadline - Challenge" => Some(Location::Villain((Villain::Deadline, 2))),
            "Deadline - Ultimate" => Some(Location::Villain((Villain::Deadline, 3))),
            "Infinitor - Normal" => Some(Location::Villain((Villain::Infinitor, 0))),
            "Infinitor - Advanced" => Some(Location::Villain((Villain::Infinitor, 1))),
            "Infinitor - Challenge" => Some(Location::Villain((Villain::Infinitor, 2))),
            "Infinitor - Ultimate" => Some(Location::Villain((Villain::Infinitor, 3))),
            "Heroic Infinitor - Normal" => Some(Location::Villain((Villain::HeroicInfinitor, 0))),
            "Heroic Infinitor - Advanced" => Some(Location::Villain((Villain::HeroicInfinitor, 1))),
            "Heroic Infinitor - Challenge" => Some(Location::Villain((Villain::HeroicInfinitor, 2))),
            "Heroic Infinitor - Ultimate" => Some(Location::Villain((Villain::HeroicInfinitor, 3))),
            "Kaargra Warfang - Normal" => Some(Location::Villain((Villain::KaargraWarfang, 0))),
            "Kaargra Warfang - Advanced" => Some(Location::Villain((Villain::KaargraWarfang, 1))),
            "Kaargra Warfang - Challenge" => Some(Location::Villain((Villain::KaargraWarfang, 2))),
            "Kaargra Warfang - Ultimate" => Some(Location::Villain((Villain::KaargraWarfang, 3))),
            "Progeny - Normal" => Some(Location::Villain((Villain::Progeny, 0))),
            "Progeny - Advanced" => Some(Location::Villain((Villain::Progeny, 1))),
            "Progeny - Challenge" => Some(Location::Villain((Villain::Progeny, 2))),
            "Progeny - Ultimate" => Some(Location::Villain((Villain::Progeny, 3))),
            "Wager Master - Normal" => Some(Location::Villain((Villain::WagerMaster, 0))),
            "Wager Master - Advanced" => Some(Location::Villain((Villain::WagerMaster, 1))),
            "Wager Master - Challenge" => Some(Location::Villain((Villain::WagerMaster, 2))),
            "Wager Master - Ultimate" => Some(Location::Villain((Villain::WagerMaster, 3))),
            "Chokepoint - Normal" => Some(Location::Villain((Villain::Chokepoint, 0))),
            "Chokepoint - Advanced" => Some(Location::Villain((Villain::Chokepoint, 1))),
            "Chokepoint - Challenge" => Some(Location::Villain((Villain::Chokepoint, 2))),
            "Chokepoint - Ultimate" => Some(Location::Villain((Villain::Chokepoint, 3))),
            "Baron Blade (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 0))),
            "Baron Blade (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 1))),
            "Baron Blade (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 2))),
            "Baron Blade (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 3))),
            "Ermine - Normal" => Some(Location::TeamVillain((TeamVillain::Ermine, 0))),
            "Ermine - Advanced" => Some(Location::TeamVillain((TeamVillain::Ermine, 1))),
            "Ermine - Challenge" => Some(Location::TeamVillain((TeamVillain::Ermine, 2))),
            "Ermine - Ultimate" => Some(Location::TeamVillain((TeamVillain::Ermine, 3))),
            "Friction - Normal" => Some(Location::TeamVillain((TeamVillain::Friction, 0))),
            "Friction - Advanced" => Some(Location::TeamVillain((TeamVillain::Friction, 1))),
            "Friction - Challenge" => Some(Location::TeamVillain((TeamVillain::Friction, 2))),
            "Friction - Ultimate" => Some(Location::TeamVillain((TeamVillain::Friction, 3))),
            "Fright Train - Normal" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 0))),
            "Fright Train - Advanced" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 1))),
            "Fright Train - Challenge" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 2))),
            "Fright Train - Ultimate" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 3))),
            "Proletariat - Normal" => Some(Location::TeamVillain((TeamVillain::Proletariat, 0))),
            "Proletariat - Advanced" => Some(Location::TeamVillain((TeamVillain::Proletariat, 1))),
            "Proletariat - Challenge" => Some(Location::TeamVillain((TeamVillain::Proletariat, 2))),
            "Proletariat - Ultimate" => Some(Location::TeamVillain((TeamVillain::Proletariat, 3))),
            "Ambuscade (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 0))),
            "Ambuscade (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 1))),
            "Ambuscade (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 2))),
            "Ambuscade (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 3))),
            "Biomancer - Normal" => Some(Location::TeamVillain((TeamVillain::Biomancer, 0))),
            "Biomancer - Advanced" => Some(Location::TeamVillain((TeamVillain::Biomancer, 1))),
            "Biomancer - Challenge" => Some(Location::TeamVillain((TeamVillain::Biomancer, 2))),
            "Biomancer - Ultimate" => Some(Location::TeamVillain((TeamVillain::Biomancer, 3))),
            "Bugbear - Normal" => Some(Location::TeamVillain((TeamVillain::Bugbear, 0))),
            "Bugbear - Advanced" => Some(Location::TeamVillain((TeamVillain::Bugbear, 1))),
            "Bugbear - Challenge" => Some(Location::TeamVillain((TeamVillain::Bugbear, 2))),
            "Bugbear - Ultimate" => Some(Location::TeamVillain((TeamVillain::Bugbear, 3))),
            "La Capitan (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 0))),
            "La Capitan (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 1))),
            "La Capitan (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 2))),
            "La Capitan (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 3))),
            "Citizens Hammer & Anvil - Normal" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 0))),
            "Citizens Hammer & Anvil - Advanced" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 1))),
            "Citizens Hammer & Anvil - Challenge" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 2))),
            "Citizens Hammer & Anvil - Ultimate" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 3))),
            "Greazer - Normal" => Some(Location::TeamVillain((TeamVillain::Greazer, 0))),
            "Greazer - Advanced" => Some(Location::TeamVillain((TeamVillain::Greazer, 1))),
            "Greazer - Challenge" => Some(Location::TeamVillain((TeamVillain::Greazer, 2))),
            "Greazer - Ultimate" => Some(Location::TeamVillain((TeamVillain::Greazer, 3))),
            "Miss Information (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::MissInformation, 0))),
            "Miss Information (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::MissInformation, 1))),
            "Miss Information (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::MissInformation, 2))),
            "Miss Information (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::MissInformation, 3))),
            "The Operative - Normal" => Some(Location::TeamVillain((TeamVillain::TheOperative, 0))),
            "The Operative - Advanced" => Some(Location::TeamVillain((TeamVillain::TheOperative, 1))),
            "The Operative - Challenge" => Some(Location::TeamVillain((TeamVillain::TheOperative, 2))),
            "The Operative - Ultimate" => Some(Location::TeamVillain((TeamVillain::TheOperative, 3))),
            "Plague Rat (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 0))),
            "Plague Rat (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 1))),
            "Plague Rat (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 2))),
            "Plague Rat (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 3))),
            "Sergeant Steel - Normal" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 0))),
            "Sergeant Steel - Advanced" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 1))),
            "Sergeant Steel - Challenge" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 2))),
            "Sergeant Steel - Ultimate" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 3))),
            "Mad Bomber Baron Blade - Unlock" => Some(Location::Variant(Variant::MadBomberBaronBlade)),
            "Omnitron II - Unlock" => Some(Location::Variant(Variant::OmnitronII)),
            "Spite - Agent of Gloom - Unlock" => Some(Location::Variant(Variant::SpiteAgentOfGloom)),
            "Skinwalker Gloomweaver - Unlock" => Some(Location::Variant(Variant::SkinwalkerGloomweaver)),
            "Trickster Kismet - Unlock" => Some(Location::Variant(Variant::TricksterKismet)),
            "Heroic Infinitor - Unlock" => Some(Location::Variant(Variant::HeroicInfinitor)),
            "America's Greatest Legacy - Unlock" => Some(Location::Variant(Variant::AmericasGreatestLegacy)),
            "America's Newest Legacy - Unlock" => Some(Location::Variant(Variant::AmericasNewestLegacy)),
            "Dark Visionary - Unlock" => Some(Location::Variant(Variant::DarkVisionary)),
            "The Eternal Haka - Unlock" => Some(Location::Variant(Variant::TheEternalHaka)),
            "G.I. Bunker - Unlock" => Some(Location::Variant(Variant::GIBunker)),
            "Ra - Horus of Two Horizons - Unlock" => Some(Location::Variant(Variant::RaHorusOfTwoHorizons)),
            "Ra - Setting Sun - Unlock" => Some(Location::Variant(Variant::RaSettingSun)),
            "Redeemer Fanatic - Unlock" => Some(Location::Variant(Variant::RedeemerFanatic)),
            "Rook City Wraith - Unlock" => Some(Location::Variant(Variant::RookCityWraith)),
            "The Super-Scientific Tachyon - Unlock" => Some(Location::Variant(Variant::TheSuperScientificTachyon)),
            "The Visionary Unleashed - Unlock" => Some(Location::Variant(Variant::TheVisionaryUnleashed)),
            "Captain Cosmic Requital - Unlock" => Some(Location::Variant(Variant::CaptainCosmicRequital)),
            "Chrono-Ranger The Best of Times - Unlock" => Some(Location::Variant(Variant::ChronoRangerTheBestOfTimes)),
            "Dark Conductor Argent Adept - Unlock" => Some(Location::Variant(Variant::DarkConductorArgentAdept)),
            "Extremist Sky-Scraper - Unlock" => Some(Location::Variant(Variant::ExtremistSkyScraper)),
            "Omnitron-U - Unlock" => Some(Location::Variant(Variant::OmnitronU)),
            "Santa Guise - Unlock" => Some(Location::Variant(Variant::SantaGuise)),
            "The Scholar of the Infinite - Unlock" => Some(Location::Variant(Variant::TheScholarOfTheInfinite)),
            "Action Hero Stuntman - Unlock" => Some(Location::Variant(Variant::ActionHeroStuntman)),
            "Akash'Thriya - Spirit of the Void - Unlock" => Some(Location::Variant(Variant::AkashThriyaSpiritOfTheVoid)),
            "Benchmark Supply & Demand - Unlock" => Some(Location::Variant(Variant::BenchmarkSupplyAndDemand)),
            "Heroic Luminary - Unlock" => Some(Location::Variant(Variant::HeroicLuminary)),
            "K.N.Y.F.E. Rogue Agent - Unlock" => Some(Location::Variant(Variant::KNYFERogueAgent)),
            "La Comodora - Curse of the Black Spot - Unlock" => Some(Location::Variant(Variant::LaComodoraCurseOfTheBlackSpot)),
            "Lifeline Blood Mage - Unlock" => Some(Location::Variant(Variant::LifelineBloodMage)),
            "Parse - Fugue State - Unlock" => Some(Location::Variant(Variant::ParseFugueState)),
            "The Adamant Sentinels - Unlock" => Some(Location::Variant(Variant::TheAdamantSentinels)),
            "The Hunted Naturalist - Unlock" => Some(Location::Variant(Variant::TheHuntedNaturalist)),
            "Termi-Nation Bunker - Unlock" => Some(Location::Variant(Variant::TermiNationBunker)),
            "Termi-Nation Absolute Zero - Unlock" => Some(Location::Variant(Variant::TermiNationAbsoluteZero)),
            "Termi-Nation Unity - Unlock" => Some(Location::Variant(Variant::TermiNationUnity)),
            "Freedom Six Absolute Zero - Unlock" => Some(Location::Variant(Variant::FreedomSixAbsoluteZero)),
            "Freedom Six Bunker - Unlock" => Some(Location::Variant(Variant::FreedomSixBunker)),
            "Freedom Six Tachyon - Unlock" => Some(Location::Variant(Variant::FreedomSixTachyon)),
            "Freedom Six Tempest - Unlock" => Some(Location::Variant(Variant::FreedomSixTempest)),
            "Freedom Six Wraith - Unlock" => Some(Location::Variant(Variant::FreedomSixWraith)),
            "Freedom Six Unity - Unlock" => Some(Location::Variant(Variant::FreedomSixUnity)),
            "Dark Watch Expatriette - Unlock" => Some(Location::Variant(Variant::DarkWatchExpatriette)),
            "Dark Watch Mister Fixer - Unlock" => Some(Location::Variant(Variant::DarkWatchMisterFixer)),
            "Dark Watch Nightmist - Unlock" => Some(Location::Variant(Variant::DarkWatchNightmist)),
            "Dark Watch Setback - Unlock" => Some(Location::Variant(Variant::DarkWatchSetback)),
            "Dark Watch Harpy - Unlock" => Some(Location::Variant(Variant::DarkWatchHarpy)),
            "Prime Wardens Argent Adept - Unlock" => Some(Location::Variant(Variant::PrimeWardensArgentAdept)),
            "Prime Wardens Captain Cosmic - Unlock" => Some(Location::Variant(Variant::PrimeWardensCaptainCosmic)),
            "Prime Wardens Fanatic - Unlock" => Some(Location::Variant(Variant::PrimeWardensFanatic)),
            "Prime Wardens Haka - Unlock" => Some(Location::Variant(Variant::PrimeWardensHaka)),
            "Prime Wardens Tempest - Unlock" => Some(Location::Variant(Variant::PrimeWardensTempest)),
            "Xtreme Prime Wardens Argent Adept - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensArgentAdept)),
            "Xtreme Prime Wardens Tempest - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensTempest)),
            "Xtreme Prime Wardens Captain Cosmic - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensCaptainCosmic)),
            "Xtreme Prime Wardens Fanatic - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensFanatic)),
            "Xtreme Prime Wardens Haka - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensHaka)),
            "Freedom Five Absolute Zero - Unlock" => Some(Location::Variant(Variant::FreedomFiveAbsoluteZero)),
            "Freedom Five Bunker - Unlock" => Some(Location::Variant(Variant::FreedomFiveBunker)),
            "Freedom Five Wraith - Unlock" => Some(Location::Variant(Variant::FreedomFiveWraith)),
            "Freedom Five Tachyon - Unlock" => Some(Location::Variant(Variant::FreedomFiveTachyon)),
            "Freedom Five Legacy - Unlock" => Some(Location::Variant(Variant::FreedomFiveLegacy)),
            "Super Sentai Idealist - Unlock" => Some(Location::Variant(Variant::SuperSentaiIdealist)),
            "Dr. Medico Malpractice - Unlock" => Some(Location::Variant(Variant::DrMedicoMalpractice)),
            "Cosmic Inventor Writhe - Unlock" => Some(Location::Variant(Variant::CosmicInventorWrithe)),
            "Road Warrior Mainstay - Unlock" => Some(Location::Variant(Variant::RoadWarriorMainstay)),
            "Insula Primalis - Any difficulty" => Some(Location::Environment(Environment::InsulaPrimalis)),
            "Megalopolis - Any difficulty" => Some(Location::Environment(Environment::Megalopolis)),
            "Ruins of Atlantis - Any difficulty" => Some(Location::Environment(Environment::RuinsOfAtlantis)),
            "Wagner Mars Base - Any difficulty" => Some(Location::Environment(Environment::WagnerMarsBase)),
            "Silver Gulch, 1883 - Any difficulty" => Some(Location::Environment(Environment::SilverGulch1883)),
            "Pike Industrial Complex - Any difficulty" => Some(Location::Environment(Environment::PikeIndustrialComplex)),
            "Rook City - Any difficulty" => Some(Location::Environment(Environment::RookCity)),
            "Realm of Discord - Any difficulty" => Some(Location::Environment(Environment::RealmOfDiscord)),
            "Tomb of Anubis - Any difficulty" => Some(Location::Environment(Environment::TombOfAnubis)),
            "The Final Wasteland - Any difficulty" => Some(Location::Environment(Environment::TheFinalWasteland)),
            "The Block - Any difficulty" => Some(Location::Environment(Environment::TheBlock)),
            "Time Cataclysm - Any difficulty" => Some(Location::Environment(Environment::TimeCataclysm)),
            "Dok'Thorath Capital - Any difficulty" => Some(Location::Environment(Environment::DokThorathCapital)),
            "The Enclave of the Endlings - Any difficulty" => Some(Location::Environment(Environment::TheEnclaveOfTheEndlings)),
            "Omnitron IV - Any difficulty" => Some(Location::Environment(Environment::OmnitronIV)),
            "Freedom Tower - Any difficulty" => Some(Location::Environment(Environment::FreedomTower)),
            "Mobile Defence Platform - Any difficulty" => Some(Location::Environment(Environment::MobileDefensePlatform)),
            "Court of Blood - Any difficulty" => Some(Location::Environment(Environment::TheCourtOfBlood)),
            "Madame Mittermeier's Fantastical Festival of Conundrums and Curiosities - Any difficulty" => {
                Some(Location::Environment(Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities))
            }
            "Magmaria - Any difficulty" => Some(Location::Environment(Environment::Magmaria)),
            "The Temple of Zhu Long - Any difficulty" => Some(Location::Environment(Environment::TheTempleOfZhuLong)),
            "The Celestial Tribunal - Any difficulty" => Some(Location::Environment(Environment::TheCelestialTribunal)),
            "Champion Studios - Any difficulty" => Some(Location::Environment(Environment::ChampionStudios)),
            "Fort Adamant - Any difficulty" => Some(Location::Environment(Environment::FortAdamant)),
            "Maerynian Refuge - Any difficulty" => Some(Location::Environment(Environment::MaerynianRefuge)),
            "Mordengrad - Any difficulty" => Some(Location::Environment(Environment::Mordengrad)),
            "Nexus of the Void - Any difficulty" => Some(Location::Environment(Environment::NexusOfTheVoid)),
            "Anathema - Normal" => Some(Location::Villain((Villain::Anathema, 0))),
            "Anathema - Advanced" => Some(Location::Villain((Villain::Anathema, 1))),
            "Anathema - Challenge" => Some(Location::Villain((Villain::Anathema, 2))),
            "Anathema - Ultimate" => Some(Location::Villain((Villain::Anathema, 3))),
            "Evolved Anathema - Normal" => Some(Location::Villain((Villain::EvolvedAnathema, 0))),
            "Evolved Anathema - Advanced" => Some(Location::Villain((Villain::EvolvedAnathema, 1))),
            "Evolved Anathema - Challenge" => Some(Location::Villain((Villain::EvolvedAnathema, 2))),
            "Evolved Anathema - Ultimate" => Some(Location::Villain((Villain::EvolvedAnathema, 3))),
            "Celadroch - Normal" => Some(Location::Villain((Villain::Celadroch, 0))),
            "Celadroch - Advanced" => Some(Location::Villain((Villain::Celadroch, 1))),
            "Celadroch - Challenge" => Some(Location::Villain((Villain::Celadroch, 2))),
            "Celadroch - Ultimate" => Some(Location::Villain((Villain::Celadroch, 3))),
            "Dendron - Normal" => Some(Location::Villain((Villain::Dendron, 0))),
            "Dendron - Advanced" => Some(Location::Villain((Villain::Dendron, 1))),
            "Dendron - Challenge" => Some(Location::Villain((Villain::Dendron, 2))),
            "Dendron - Ultimate" => Some(Location::Villain((Villain::Dendron, 3))),
            "Windcolor Dendron - Normal" => Some(Location::Villain((Villain::WindcolorDendron, 0))),
            "Windcolor Dendron - Advanced" => Some(Location::Villain((Villain::WindcolorDendron, 1))),
            "Windcolor Dendron - Challenge" => Some(Location::Villain((Villain::WindcolorDendron, 2))),
            "Windcolor Dendron - Ultimate" => Some(Location::Villain((Villain::WindcolorDendron, 3))),
            "Dynamo - Normal" => Some(Location::Villain((Villain::Dynamo, 0))),
            "Dynamo - Advanced" => Some(Location::Villain((Villain::Dynamo, 1))),
            "Dynamo - Challenge" => Some(Location::Villain((Villain::Dynamo, 2))),
            "Dynamo - Ultimate" => Some(Location::Villain((Villain::Dynamo, 3))),
            "Gray - Normal" => Some(Location::Villain((Villain::Gray, 0))),
            "Gray - Advanced" => Some(Location::Villain((Villain::Gray, 1))),
            "Gray - Challenge" => Some(Location::Villain((Villain::Gray, 2))),
            "Gray - Ultimate" => Some(Location::Villain((Villain::Gray, 3))),
            "The Infernal Choir - Normal" => Some(Location::Villain((Villain::TheInfernalChoir, 0))),
            "The Infernal Choir - Advanced" => Some(Location::Villain((Villain::TheInfernalChoir, 1))),
            "The Infernal Choir - Challenge" => Some(Location::Villain((Villain::TheInfernalChoir, 2))),
            "The Infernal Choir - Ultimate" => Some(Location::Villain((Villain::TheInfernalChoir, 3))),
            "Menagerie - Normal" => Some(Location::Villain((Villain::Menagerie, 0))),
            "Menagerie - Advanced" => Some(Location::Villain((Villain::Menagerie, 1))),
            "Menagerie - Challenge" => Some(Location::Villain((Villain::Menagerie, 2))),
            "Menagerie - Ultimate" => Some(Location::Villain((Villain::Menagerie, 3))),
            "The Mistress of Fate - Normal" => Some(Location::Villain((Villain::TheMistressOfFate, 0))),
            "The Mistress of Fate - Advanced" => Some(Location::Villain((Villain::TheMistressOfFate, 1))),
            "The Mistress of Fate - Challenge" => Some(Location::Villain((Villain::TheMistressOfFate, 2))),
            "The Mistress of Fate - Ultimate" => Some(Location::Villain((Villain::TheMistressOfFate, 3))),
            "Mythos - Normal" => Some(Location::Villain((Villain::Mythos, 0))),
            "Mythos - Advanced" => Some(Location::Villain((Villain::Mythos, 1))),
            "Mythos - Challenge" => Some(Location::Villain((Villain::Mythos, 2))),
            "Mythos - Ultimate" => Some(Location::Villain((Villain::Mythos, 3))),
            "Oriphel - Normal" => Some(Location::Villain((Villain::Oriphel, 0))),
            "Oriphel - Advanced" => Some(Location::Villain((Villain::Oriphel, 1))),
            "Oriphel - Challenge" => Some(Location::Villain((Villain::Oriphel, 2))),
            "Oriphel - Ultimate" => Some(Location::Villain((Villain::Oriphel, 3))),
            "Outlander - Normal" => Some(Location::Villain((Villain::Outlander, 0))),
            "Outlander - Advanced" => Some(Location::Villain((Villain::Outlander, 1))),
            "Outlander - Challenge" => Some(Location::Villain((Villain::Outlander, 2))),
            "Outlander - Ultimate" => Some(Location::Villain((Villain::Outlander, 3))),
            "Phase - Normal" => Some(Location::Villain((Villain::Phase, 0))),
            "Phase - Advanced" => Some(Location::Villain((Villain::Phase, 1))),
            "Phase - Challenge" => Some(Location::Villain((Villain::Phase, 2))),
            "Phase - Ultimate" => Some(Location::Villain((Villain::Phase, 3))),
            "The Ram - Normal" => Some(Location::Villain((Villain::TheRam, 0))),
            "The Ram - Advanced" => Some(Location::Villain((Villain::TheRam, 1))),
            "The Ram - Challenge" => Some(Location::Villain((Villain::TheRam, 2))),
            "The Ram - Ultimate" => Some(Location::Villain((Villain::TheRam, 3))),
            "1929 Ram - Normal" => Some(Location::Villain((Villain::Ram1929, 0))),
            "1929 Ram - Advanced" => Some(Location::Villain((Villain::Ram1929, 1))),
            "1929 Ram - Challenge" => Some(Location::Villain((Villain::Ram1929, 2))),
            "1929 Ram - Ultimate" => Some(Location::Villain((Villain::Ram1929, 3))),
            "Scream Machine - Normal" => Some(Location::Villain((Villain::ScreamMachine, 0))),
            "Scream Machine - Advanced" => Some(Location::Villain((Villain::ScreamMachine, 1))),
            "Scream Machine - Challenge" => Some(Location::Villain((Villain::ScreamMachine, 2))),
            "Scream Machine - Ultimate" => Some(Location::Villain((Villain::ScreamMachine, 3))),
            "Swarm Eater - Normal" => Some(Location::Villain((Villain::SwarmEater, 0))),
            "Swarm Eater - Advanced" => Some(Location::Villain((Villain::SwarmEater, 1))),
            "Swarm Eater - Challenge" => Some(Location::Villain((Villain::SwarmEater, 2))),
            "Swarm Eater - Ultimate" => Some(Location::Villain((Villain::SwarmEater, 3))),
            "Hivemind Swarm Eater - Normal" => Some(Location::Villain((Villain::HivemindSwarmEater, 0))),
            "Hivemind Swarm Eater - Advanced" => Some(Location::Villain((Villain::HivemindSwarmEater, 1))),
            "Hivemind Swarm Eater - Challenge" => Some(Location::Villain((Villain::HivemindSwarmEater, 2))),
            "Hivemind Swarm Eater - Ultimate" => Some(Location::Villain((Villain::HivemindSwarmEater, 3))),
            "Tiamat - Normal" => Some(Location::Villain((Villain::Tiamat, 0))),
            "Tiamat - Advanced" => Some(Location::Villain((Villain::Tiamat, 1))),
            "Tiamat - Challenge" => Some(Location::Villain((Villain::Tiamat, 2))),
            "Tiamat - Ultimate" => Some(Location::Villain((Villain::Tiamat, 3))),
            "Hydra Tiamat - Normal" => Some(Location::Villain((Villain::HydraTiamat, 0))),
            "Hydra Tiamat - Advanced" => Some(Location::Villain((Villain::HydraTiamat, 1))),
            "Hydra Tiamat - Challenge" => Some(Location::Villain((Villain::HydraTiamat, 2))),
            "Hydra Tiamat - Ultimate" => Some(Location::Villain((Villain::HydraTiamat, 3))),
            "Tiamat 2199 - Normal" => Some(Location::Villain((Villain::Tiamat2199, 0))),
            "Tiamat 2199 - Advanced" => Some(Location::Villain((Villain::Tiamat2199, 1))),
            "Tiamat 2199 - Challenge" => Some(Location::Villain((Villain::Tiamat2199, 2))),
            "Tiamat 2199 - Ultimate" => Some(Location::Villain((Villain::Tiamat2199, 3))),
            "Vector - Normal" => Some(Location::Villain((Villain::Vector, 0))),
            "Vector - Advanced" => Some(Location::Villain((Villain::Vector, 1))),
            "Vector - Challenge" => Some(Location::Villain((Villain::Vector, 2))),
            "Vector - Ultimate" => Some(Location::Villain((Villain::Vector, 3))),
            "Blackwood Forest - Any Difficulty" => Some(Location::Environment(Environment::BlackwoodForest)),
            "Catchwater Harbor 1929 - Any Difficulty" => Some(Location::Environment(Environment::CatchwaterHarbor1929)),
            "The Chasm of a Thousand Nights - Any Difficulty" => Some(Location::Environment(Environment::TheChasmOfAThousandNights)),
            "The Cybersphere - Any Difficulty" => Some(Location::Environment(Environment::TheCybersphere)),
            "Dungeons of Terror - Any Difficulty" => Some(Location::Environment(Environment::DungeonsOfTerror)),
            "F.S.C. Continuance Wanderer - Any Difficulty" => Some(Location::Environment(Environment::FSCContinuanceWanderer)),
            "Halberd E.R.C. - Any Difficulty" => Some(Location::Environment(Environment::HalberdERC)),
            "Nightlore Citadel - Any Difficulty" => Some(Location::Environment(Environment::NightloreCitadel)),
            "Northspar - Any Difficulty" => Some(Location::Environment(Environment::Northspar)),
            "Oblask Crater - Any Difficulty" => Some(Location::Environment(Environment::OblaskCrater)),
            "St. Simeon's Catacombs - Any Difficulty" => Some(Location::Environment(Environment::StSimeonsCatacombs)),
            "Superstorm Akela - Any Difficulty" => Some(Location::Environment(Environment::SuperstormAkela)),
            "Vault 5 - Any Difficulty" => Some(Location::Environment(Environment::Vault5)),
            "The Wandering Isle - Any Difficulty" => Some(Location::Environment(Environment::TheWanderingIsle)),
            "Windmill City - Any Difficulty" => Some(Location::Environment(Environment::WindmillCity)),
            "Oblivaeon" => Some(Location::Victory),
            _ => None,
        }
    }
}
impl Hash for Item {
    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
        match self {
            Item::Hero(v) => *v as usize,
            Item::Variant(v) => *v as usize + Hero::variant_count(),
            Item::Villain(v) => *v as usize + Hero::variant_count() + Variant::variant_count(),
            Item::TeamVillain(v) => *v as usize + Hero::variant_count() + Variant::variant_count() + Villain::variant_count(),
            Item::Environment(v) => *v as usize + Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count(),
            Item::Scion => Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count() + Environment::variant_count(),
            Item::Filler => Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count() + Environment::variant_count() + 1,
        }
        .hash(state);
    }
}

impl Hash for Location {
    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
        match self {
            Location::Variant(v) => *v as usize,
            Location::Villain((v, d)) => (*v as usize) * 4 + *d as usize + Variant::variant_count(),
            Location::TeamVillain((v, d)) => (*v as usize) * 4 + *d as usize + Variant::variant_count() + Villain::variant_count() * 4,
            Location::Environment(v) => *v as usize + Variant::variant_count() + Villain::variant_count() * 4 + TeamVillain::variant_count() * 4,
            Location::Victory => Variant::variant_count() + Villain::variant_count() * 4 + TeamVillain::variant_count() * 4 + Environment::variant_count(),
        }
        .hash(state);
    }
}
