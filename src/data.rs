use std::hash::Hash;

use strum::EnumIter;

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
pub enum Item {
    Hero(Hero),
    Variant(Variant),
    Villain(Villain),
    TeamVillain(TeamVillain),
    Environment(Environment),
    Scion,
    Filler,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
pub enum Location {
    Variant(Variant),
    Villain((Villain, u8)),
    TeamVillain((TeamVillain, u8)),
    Environment(Environment),
    Victory,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter)]
pub enum Villain {
    BaronBlade,
    MadBomberBaronBlade,
    CitizenDawn,
    GrandWarlordVoss,
    Omnitron,
    OmnitronII,
    Ambuscade,
    TheChairman,
    TheMatriarch,
    PlagueRat,
    Spite,
    SpiteAgentOfGloom,
    AkashBhuta,
    Apostate,
    TheEnnead,
    Gloomweaver,
    SkinwalkerGloomweaver,
    MissInformation,
    LaCapitan,
    TheDreamer,
    IronLegacy,
    Kismet,
    TricksterKismet,
    Deadline,
    Infinitor,
    HeroicInfinitor,
    KaargraWarfang,
    Progeny,
    WagerMaster,
    Chokepoint,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter)]
pub enum TeamVillain {
    BaronBlade,
    Ermine,
    Friction,
    FrightTrain,
    Proletariat,
    Ambuscade,
    Biomancer,
    Bugbear,
    LaCapitan,
    CitizensHammerAndAnvil,
    Greazer,
    MissInformation,
    TheOperative,
    PlagueRat,
    SergeantSteel,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter)]
pub enum Hero {
    AbsoluteZero,
    Bunker,
    Fanatic,
    Haka,
    Legacy,
    Ra,
    Tachyon,
    Tempest,
    Visionary,
    Wraith,
    Unity,
    Expatriette,
    MisterFixer,
    ArgentAdept,
    Nightmist,
    TheScholar,
    ChronoRanger,
    OmnitronX,
    CaptainCosmic,
    SkyScraper,
    Guise,
    KNYFE,
    TheNaturalist,
    Parse,
    TheSentiels,
    Setback,
    Benchmark,
    Stuntman,
    DoctorMedico,
    TheIdealist,
    Mainstay,
    Writhe,
    AkashThriya,
    LaComodora,
    TheHarpy,
    Lifeline,
    Luminary,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter)]
pub enum Environment {
    InsulaPrimalis,
    Megalopolis,
    RuinsOfAtlantis,
    WagnerMarsBase,
    SilverGulch1883,
    PikeIndustrialComplex,
    RookCity,
    RealmOfDiscord,
    TombOfAnubis,
    TheFinalWasteland,
    TheBlock,
    TimeCataclysm,
    DokThorathCapital,
    TheEnclaveOfTheEndlings,
    OmnitronIV,
    FreedomTower,
    MobileDefensePlatform,
    TheCourtOfBlood,
    MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities,
    Magmaria,
    TheTempleOfZhuLong,
    TheCelestialTribunal,
    ChampionStudios,
    FortAdamant,
    MaerynianRefuge,
    Mordengrad,
    NexusOfTheVoid,
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, EnumIter)]
pub enum Variant {
    Base,
    AmericasGreatestLegacy,
    AmericasNewestLegacy,
    DarkVisionary,
    TheEternalHaka,
    GIBunker,
    RaHorusOfTwoHorizons,
    RaSettingSun,
    RedeemerFanatic,
    RookCityWraith,
    TheSuperScientificTachyon,
    TheVisionaryUnleashed,
    CaptainCosmicRequital,
    ChronoRangerTheBestOfTimes,
    DarkConductorArgentAdept,
    ExtremistSkyScraper,
    OmnitronU,
    SantaGuise,
    TheScholarOfTheInfinite,
    ActionHeroStuntman,
    AkashThriyaSpiritOfTheVoid,
    BenchmarkSupplyAndDemand,
    HeroicLuminary,
    KNYFERogueAgent,
    LaComodoraCurseOfTheBlackSpot,
    LifelineBloodMage,
    ParseFugueState,
    TheAdamantSentinels,
    TheHuntedNaturalist,
    TermiNationBunker,
    TermiNationAbsoluteZero,
    TermiNationUnity,
    FreedomSixAbsoluteZero,
    FreedomSixBunker,
    FreedomSixTachyon,
    FreedomSixTempest,
    FreedomSixWraith,
    FreedomSixUnity,
    DarkWatchExpatriette,
    DarkWatchMisterFixer,
    DarkWatchNightmist,
    DarkWatchSetback,
    DarkWatchHarpy,
    PrimeWardensArgentAdept,
    PrimeWardensCaptainCosmic,
    PrimeWardensFanatic,
    PrimeWardensHaka,
    PrimeWardensTempest,
    XtremePrimeWardensArgentAdept,
    XtremePrimeWardensTempest,
    XtremePrimeWardensCaptainCosmic,
    XtremePrimeWardensFanatic,
    XtremePrimeWardensHaka,
    FreedomFiveAbsoluteZero,
    FreedomFiveBunker,
    FreedomFiveWraith,
    FreedomFiveTachyon,
    FreedomFiveLegacy,
    SuperSentaiIdealist,
    DrMedicoMalpractice,
    CosmicInventorWrithe,
    RoadWarriorMainstay,
    CompletionistGuise,
    MadBomberBaronBlade,
    OmnitronII,
    SpiteAgentOfGloom,
    SkinwalkerGloomweaver,
    TricksterKismet,
    HeroicInfinitor,
}

impl Variant {
    pub const fn variant_count() -> usize {
        69
    }

    pub fn to_i(&self) -> u8 {
        match self {
            Variant::Base => 0,
            Variant::AmericasGreatestLegacy => 1,
            Variant::AmericasNewestLegacy => 2,
            Variant::DarkVisionary => 1,
            Variant::TheEternalHaka => 1,
            Variant::GIBunker => 1,
            Variant::RaHorusOfTwoHorizons => 1,
            Variant::RaSettingSun => 2,
            Variant::RedeemerFanatic => 1,
            Variant::RookCityWraith => 1,
            Variant::TheSuperScientificTachyon => 1,
            Variant::TheVisionaryUnleashed => 2,
            Variant::CaptainCosmicRequital => 1,
            Variant::ChronoRangerTheBestOfTimes => 1,
            Variant::DarkConductorArgentAdept => 1,
            Variant::ExtremistSkyScraper => 1,
            Variant::OmnitronU => 1,
            Variant::SantaGuise => 1,
            Variant::TheScholarOfTheInfinite => 1,
            Variant::ActionHeroStuntman => 1,
            Variant::AkashThriyaSpiritOfTheVoid => 1,
            Variant::BenchmarkSupplyAndDemand => 1,
            Variant::HeroicLuminary => 1,
            Variant::KNYFERogueAgent => 1,
            Variant::LaComodoraCurseOfTheBlackSpot => 1,
            Variant::LifelineBloodMage => 1,
            Variant::ParseFugueState => 1,
            Variant::TheAdamantSentinels => 1,
            Variant::TheHuntedNaturalist => 1,
            Variant::TermiNationBunker => 2,
            Variant::TermiNationAbsoluteZero => 2,
            Variant::TermiNationUnity => 1,
            Variant::FreedomSixAbsoluteZero => 3,
            Variant::FreedomSixBunker => 3,
            Variant::FreedomSixTachyon => 2,
            Variant::FreedomSixTempest => 1,
            Variant::FreedomSixWraith => 2,
            Variant::FreedomSixUnity => 2,
            Variant::DarkWatchExpatriette => 1,
            Variant::DarkWatchMisterFixer => 1,
            Variant::DarkWatchNightmist => 1,
            Variant::DarkWatchSetback => 1,
            Variant::DarkWatchHarpy => 1,
            Variant::PrimeWardensArgentAdept => 2,
            Variant::PrimeWardensCaptainCosmic => 2,
            Variant::PrimeWardensFanatic => 2,
            Variant::PrimeWardensHaka => 2,
            Variant::PrimeWardensTempest => 2,
            Variant::XtremePrimeWardensArgentAdept => 3,
            Variant::XtremePrimeWardensTempest => 3,
            Variant::XtremePrimeWardensCaptainCosmic => 3,
            Variant::XtremePrimeWardensFanatic => 3,
            Variant::XtremePrimeWardensHaka => 3,
            Variant::FreedomFiveAbsoluteZero => 4,
            Variant::FreedomFiveBunker => 4,
            Variant::FreedomFiveWraith => 3,
            Variant::FreedomFiveTachyon => 3,
            Variant::FreedomFiveLegacy => 3,
            Variant::SuperSentaiIdealist => 1,
            Variant::DrMedicoMalpractice => 1,
            Variant::CosmicInventorWrithe => 1,
            Variant::RoadWarriorMainstay => 1,
            Variant::CompletionistGuise => 2,
            Variant::MadBomberBaronBlade => 0,
            Variant::OmnitronII => 0,
            Variant::SpiteAgentOfGloom => 0,
            Variant::SkinwalkerGloomweaver => 0,
            Variant::TricksterKismet => 0,
            Variant::HeroicInfinitor => 0,
        }
    }

    pub fn to_normal(&self) -> Option<Hero> {
        match self {
            Variant::Base => None,
            Variant::AmericasGreatestLegacy => Some(Hero::Legacy),
            Variant::AmericasNewestLegacy => Some(Hero::Legacy),
            Variant::DarkVisionary => Some(Hero::Visionary),
            Variant::TheEternalHaka => Some(Hero::Haka),
            Variant::GIBunker => Some(Hero::Bunker),
            Variant::RaHorusOfTwoHorizons => Some(Hero::Ra),
            Variant::RaSettingSun => Some(Hero::Ra),
            Variant::RedeemerFanatic => Some(Hero::Fanatic),
            Variant::RookCityWraith => Some(Hero::Wraith),
            Variant::TheSuperScientificTachyon => Some(Hero::Tachyon),
            Variant::TheVisionaryUnleashed => Some(Hero::Visionary),
            Variant::CaptainCosmicRequital => Some(Hero::CaptainCosmic),
            Variant::ChronoRangerTheBestOfTimes => Some(Hero::ChronoRanger),
            Variant::DarkConductorArgentAdept => Some(Hero::ArgentAdept),
            Variant::ExtremistSkyScraper => Some(Hero::SkyScraper),
            Variant::OmnitronU => Some(Hero::OmnitronX),
            Variant::SantaGuise => Some(Hero::Guise),
            Variant::TheScholarOfTheInfinite => Some(Hero::TheScholar),
            Variant::ActionHeroStuntman => Some(Hero::Stuntman),
            Variant::AkashThriyaSpiritOfTheVoid => Some(Hero::AkashThriya),
            Variant::BenchmarkSupplyAndDemand => Some(Hero::Benchmark),
            Variant::HeroicLuminary => Some(Hero::Luminary),
            Variant::KNYFERogueAgent => Some(Hero::KNYFE),
            Variant::LaComodoraCurseOfTheBlackSpot => Some(Hero::LaComodora),
            Variant::LifelineBloodMage => Some(Hero::Lifeline),
            Variant::ParseFugueState => Some(Hero::Parse),
            Variant::TheAdamantSentinels => Some(Hero::TheSentiels),
            Variant::TheHuntedNaturalist => Some(Hero::TheNaturalist),
            Variant::TermiNationBunker => Some(Hero::Bunker),
            Variant::TermiNationAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::TermiNationUnity => Some(Hero::Unity),
            Variant::FreedomSixAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::FreedomSixBunker => Some(Hero::Bunker),
            Variant::FreedomSixTachyon => Some(Hero::Tachyon),
            Variant::FreedomSixTempest => Some(Hero::Tempest),
            Variant::FreedomSixWraith => Some(Hero::Wraith),
            Variant::FreedomSixUnity => Some(Hero::Unity),
            Variant::DarkWatchExpatriette => Some(Hero::Expatriette),
            Variant::DarkWatchMisterFixer => Some(Hero::MisterFixer),
            Variant::DarkWatchNightmist => Some(Hero::Nightmist),
            Variant::DarkWatchSetback => Some(Hero::Setback),
            Variant::DarkWatchHarpy => Some(Hero::TheHarpy),
            Variant::PrimeWardensArgentAdept => Some(Hero::ArgentAdept),
            Variant::PrimeWardensCaptainCosmic => Some(Hero::CaptainCosmic),
            Variant::PrimeWardensFanatic => Some(Hero::Fanatic),
            Variant::PrimeWardensHaka => Some(Hero::Haka),
            Variant::PrimeWardensTempest => Some(Hero::Tempest),
            Variant::XtremePrimeWardensArgentAdept => Some(Hero::ArgentAdept),
            Variant::XtremePrimeWardensTempest => Some(Hero::Tempest),
            Variant::XtremePrimeWardensCaptainCosmic => Some(Hero::CaptainCosmic),
            Variant::XtremePrimeWardensFanatic => Some(Hero::Fanatic),
            Variant::XtremePrimeWardensHaka => Some(Hero::Haka),
            Variant::FreedomFiveAbsoluteZero => Some(Hero::AbsoluteZero),
            Variant::FreedomFiveBunker => Some(Hero::Bunker),
            Variant::FreedomFiveWraith => Some(Hero::Wraith),
            Variant::FreedomFiveTachyon => Some(Hero::Tachyon),
            Variant::FreedomFiveLegacy => Some(Hero::Legacy),
            Variant::SuperSentaiIdealist => Some(Hero::TheIdealist),
            Variant::DrMedicoMalpractice => Some(Hero::DoctorMedico),
            Variant::CosmicInventorWrithe => Some(Hero::Writhe),
            Variant::RoadWarriorMainstay => Some(Hero::Mainstay),
            Variant::CompletionistGuise => Some(Hero::Guise),
            Variant::MadBomberBaronBlade => None,
            Variant::OmnitronII => None,
            Variant::SpiteAgentOfGloom => None,
            Variant::SkinwalkerGloomweaver => None,
            Variant::TricksterKismet => None,
            Variant::HeroicInfinitor => None,
        }
    }

    pub fn to_str(&self) -> &str {
        match self {
            Variant::Base => "Base",
            Variant::AmericasGreatestLegacy => "America's Greatest Legacy",
            Variant::AmericasNewestLegacy => "America's Newest Legacy",
            Variant::DarkVisionary => "Dark Visionary",
            Variant::TheEternalHaka => "The Eternal Haka",
            Variant::GIBunker => "G.I. Bunker",
            Variant::RaHorusOfTwoHorizons => "Ra: Horus of Two Horizons",
            Variant::RaSettingSun => "Ra: Setting Sun",
            Variant::RedeemerFanatic => "Redeemer Fanatic",
            Variant::RookCityWraith => "Rook City Wraith",
            Variant::TheSuperScientificTachyon => "The Super-Scientific Tachyon",
            Variant::TheVisionaryUnleashed => "The Visionary Unleashed",
            Variant::CaptainCosmicRequital => "Captain Cosmic Requital",
            Variant::ChronoRangerTheBestOfTimes => "Chrono-Ranger The Best of Times",
            Variant::DarkConductorArgentAdept => "Dark Conductor Argent Adept",
            Variant::ExtremistSkyScraper => "Extremist Sky-Scraper",
            Variant::OmnitronU => "Omnitron-U",
            Variant::SantaGuise => "Santa Guise",
            Variant::TheScholarOfTheInfinite => "The Scholar of the Infinite",
            Variant::ActionHeroStuntman => "Action Hero Stuntman",
            Variant::AkashThriyaSpiritOfTheVoid => "Akash'Thriya: Spirit of the Void",
            Variant::BenchmarkSupplyAndDemand => "Benchmark Supply and Demand",
            Variant::HeroicLuminary => "Heroic Luminary",
            Variant::KNYFERogueAgent => "K.N.Y.F.E. Rogue Agent",
            Variant::LaComodoraCurseOfTheBlackSpot => "La Comodora: Curse of the Black Spot",
            Variant::LifelineBloodMage => "Lifeline Blood Mage",
            Variant::ParseFugueState => "Parse: Fugue State",
            Variant::TheAdamantSentinels => "The Adamant Sentinels",
            Variant::TheHuntedNaturalist => "The Hunted Naturalist",
            Variant::TermiNationBunker => "Termi-Nation Bunker",
            Variant::TermiNationAbsoluteZero => "Termi-Nation Absolute Zero",
            Variant::TermiNationUnity => "Termi-Nation Unity",
            Variant::FreedomSixAbsoluteZero => "Freedom Six Absolute Zero",
            Variant::FreedomSixBunker => "Freedom Six Bunker",
            Variant::FreedomSixTachyon => "Freedom Six Tachyon",
            Variant::FreedomSixTempest => "Freedom Six Tempest",
            Variant::FreedomSixWraith => "Freedom Six Wraith",
            Variant::FreedomSixUnity => "Freedom Six Unity",
            Variant::DarkWatchExpatriette => "Dark Watch Expatriette",
            Variant::DarkWatchMisterFixer => "Dark Watch Mister Fixer",
            Variant::DarkWatchNightmist => "Dark Watch Nightmist",
            Variant::DarkWatchSetback => "Dark Watch Setback",
            Variant::DarkWatchHarpy => "Dark Watch Harpy",
            Variant::PrimeWardensArgentAdept => "Prime Wardens Argent Adept",
            Variant::PrimeWardensCaptainCosmic => "Prime Wardens Captain Cosmic",
            Variant::PrimeWardensFanatic => "Prime Wardens Fanatic",
            Variant::PrimeWardensHaka => "Prime Wardens Haka",
            Variant::PrimeWardensTempest => "Prime Wardens Tempest",
            Variant::XtremePrimeWardensArgentAdept => "XTreme Prime Wardens Argent Adept",
            Variant::XtremePrimeWardensTempest => "XTreme Prime Wardens Tempest",
            Variant::XtremePrimeWardensCaptainCosmic => "XTreme Prime Wardens Captain Cosmic",
            Variant::XtremePrimeWardensFanatic => "XTreme Prime Wardens Fanatic",
            Variant::XtremePrimeWardensHaka => "XTreme Prime Wardens Haka",
            Variant::FreedomFiveAbsoluteZero => "Freedom Five Absolute Zero",
            Variant::FreedomFiveBunker => "Freedom Five Bunker",
            Variant::FreedomFiveWraith => "Freedom Five Wraith",
            Variant::FreedomFiveTachyon => "Freedom Five Tachyon",
            Variant::FreedomFiveLegacy => "Freedom Five Legacy",
            Variant::SuperSentaiIdealist => "Super Sentai Idealist",
            Variant::DrMedicoMalpractice => "Dr. Medico Malpractice",
            Variant::CosmicInventorWrithe => "Cosmic Inventor Writhe",
            Variant::RoadWarriorMainstay => "Road Warrior Mainstay",
            Variant::CompletionistGuise => "Completionist Guise",
            Variant::MadBomberBaronBlade => "Mad Bomber Baron Blade",
            Variant::OmnitronII => "Omnitron II",
            Variant::SpiteAgentOfGloom => "Spite: Agent of Gloom",
            Variant::SkinwalkerGloomweaver => "Skinwalker Gloomweaver",
            Variant::TricksterKismet => "Trickster Kismet",
            Variant::HeroicInfinitor => "Heroic Infinitor",
        }
    }
}

impl Hero {
    pub const fn variant_count() -> usize {
        37
    }

    pub fn to_str(&self) -> &str {
        match self {
            Hero::AbsoluteZero => "Absolute Zero",
            Hero::Bunker => "Bunker",
            Hero::Fanatic => "Fanatic",
            Hero::Haka => "Haka",
            Hero::Legacy => "Legacy",
            Hero::Ra => "Ra",
            Hero::Tachyon => "Tachyon",
            Hero::Tempest => "Tempest",
            Hero::Visionary => "Visionary",
            Hero::Wraith => "Wraith",
            Hero::Unity => "Unity",
            Hero::Expatriette => "Expatriette",
            Hero::MisterFixer => "Mister Fixer",
            Hero::ArgentAdept => "Argent Adept",
            Hero::Nightmist => "Nightmist",
            Hero::TheScholar => "The Scholar",
            Hero::ChronoRanger => "Chrono-Ranger",
            Hero::OmnitronX => "Omnitron-X",
            Hero::CaptainCosmic => "Captain Cosmic",
            Hero::SkyScraper => "Sky-Scraper",
            Hero::Guise => "Guise",
            Hero::KNYFE => "K.N.Y.F.E.",
            Hero::TheNaturalist => "The Naturalist",
            Hero::Parse => "Parse",
            Hero::TheSentiels => "The Sentinels",
            Hero::Setback => "Setback",
            Hero::Benchmark => "Benchmark",
            Hero::Stuntman => "Stuntman",
            Hero::DoctorMedico => "Void Guard Dr. Medico",
            Hero::TheIdealist => "Void Guard The Idealist",
            Hero::Mainstay => "Void Guard Mainstay",
            Hero::Writhe => "Void Guard Writhe",
            Hero::AkashThriya => "Akash'Thriya",
            Hero::LaComodora => "La Comodora",
            Hero::TheHarpy => "The Harpy",
            Hero::Lifeline => "Lifeline",
            Hero::Luminary => "Luminary",
        }
    }
}

impl Villain {
    pub const fn variant_count() -> usize {
        30
    }

    pub fn to_str(&self) -> &str {
        match self {
            Villain::BaronBlade => "Baron Blade",
            Villain::MadBomberBaronBlade => "Mad Bomber Baron Blade",
            Villain::CitizenDawn => "Citizen Dawn",
            Villain::GrandWarlordVoss => "Grand Warlord Voss",
            Villain::Omnitron => "Omnitron",
            Villain::OmnitronII => "Omnitron II",
            Villain::Ambuscade => "Ambuscade",
            Villain::TheChairman => "The Chairman",
            Villain::TheMatriarch => "The Matriarch",
            Villain::PlagueRat => "Plague Rat",
            Villain::Spite => "Spite",
            Villain::SpiteAgentOfGloom => "Spite: Agent of Gloom",
            Villain::AkashBhuta => "Akash'Bhuta",
            Villain::Apostate => "Apostate",
            Villain::TheEnnead => "The Ennead",
            Villain::Gloomweaver => "Gloomweaver",
            Villain::SkinwalkerGloomweaver => "Skinwalker Gloomweaver",
            Villain::MissInformation => "Miss Information",
            Villain::LaCapitan => "La Capitán",
            Villain::TheDreamer => "The Dreamer",
            Villain::IronLegacy => "Iron Legacy",
            Villain::Kismet => "Kismet",
            Villain::TricksterKismet => "Trickster Kismet",
            Villain::Deadline => "Deadline",
            Villain::Infinitor => "Infinitor",
            Villain::HeroicInfinitor => "Heroic Infinitor",
            Villain::KaargraWarfang => "Kaargra Warfang",
            Villain::Progeny => "Progeny",
            Villain::WagerMaster => "Wager Master",
            Villain::Chokepoint => "Chokepoint",
        }
    }
}

impl TeamVillain {
    pub const fn variant_count() -> usize {
        15
    }

    pub fn to_str(&self) -> &str {
        match self {
            TeamVillain::BaronBlade => "Baron Blade (Team)",
            TeamVillain::Ermine => "Ermine",
            TeamVillain::Friction => "Friction",
            TeamVillain::FrightTrain => "Fright Train",
            TeamVillain::Proletariat => "Proletariat",
            TeamVillain::Ambuscade => "Ambuscade (Team)",
            TeamVillain::Biomancer => "Biomancer",
            TeamVillain::Bugbear => "Bugbear",
            TeamVillain::LaCapitan => "La Capitan (Team)",
            TeamVillain::CitizensHammerAndAnvil => "Citizens Hammer & Anvil",
            TeamVillain::Greazer => "Greazer",
            TeamVillain::MissInformation => "Miss Information (Team)",
            TeamVillain::TheOperative => "The Operative",
            TeamVillain::PlagueRat => "Plague Rat (Team)",
            TeamVillain::SergeantSteel => "Sergeant Steel",
        }
    }
}

impl Environment {
    pub const fn variant_count() -> usize {
        27
    }

    pub fn to_str(&self) -> &str {
        match self {
            Environment::InsulaPrimalis => "Insula Primalis",
            Environment::Megalopolis => "Megalopolis",
            Environment::RuinsOfAtlantis => "Ruins of Atlantis",
            Environment::WagnerMarsBase => "Wagner Mars Base",
            Environment::SilverGulch1883 => "Silver Gulch 1883",
            Environment::PikeIndustrialComplex => "Pike Industrial Complex",
            Environment::RookCity => "Rook City",
            Environment::RealmOfDiscord => "Realm of Discord",
            Environment::TombOfAnubis => "Tomb of Anubis",
            Environment::TheFinalWasteland => "The Final Wasteland",
            Environment::TheBlock => "The Block",
            Environment::TimeCataclysm => "Time Cataclysm",
            Environment::DokThorathCapital => "Dok'Thorath Capital",
            Environment::TheEnclaveOfTheEndlings => "The Enclave of the Endlings",
            Environment::OmnitronIV => "Omnitron IV",
            Environment::FreedomTower => "Freedom Tower",
            Environment::MobileDefensePlatform => "Mobile Defence Platform",
            Environment::TheCourtOfBlood => "The Court of Blood",
            Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities => "Madame Mittermeiers Fantastical Festival of Conundrums and Curiosities",
            Environment::Magmaria => "Magmaria",
            Environment::TheTempleOfZhuLong => "The Temple of Zhu Long",
            Environment::TheCelestialTribunal => "The Celestial Tribunal",
            Environment::ChampionStudios => "Champion Studios",
            Environment::FortAdamant => "Fort Adamant",
            Environment::MaerynianRefuge => "Maerynian Refuge",
            Environment::Mordengrad => "Mordengrad",
            Environment::NexusOfTheVoid => "Nexus of the Void",
        }
    }
}

impl Item {
    pub fn from_str(str: &str) -> Option<Item> {
        match str {
            "Absolute Zero" => Some(Item::Hero(Hero::AbsoluteZero)),
            "Bunker" => Some(Item::Hero(Hero::Bunker)),
            "Fanatic" => Some(Item::Hero(Hero::Fanatic)),
            "Haka" => Some(Item::Hero(Hero::Haka)),
            "Legacy" => Some(Item::Hero(Hero::Legacy)),
            "Ra" => Some(Item::Hero(Hero::Ra)),
            "Tachyon" => Some(Item::Hero(Hero::Tachyon)),
            "Tempest" => Some(Item::Hero(Hero::Tempest)),
            "The Visionary" => Some(Item::Hero(Hero::Visionary)),
            "Wraith" => Some(Item::Hero(Hero::Wraith)),
            "Unity" => Some(Item::Hero(Hero::Unity)),
            "Expatriette" => Some(Item::Hero(Hero::Expatriette)),
            "Mister Fixer" => Some(Item::Hero(Hero::MisterFixer)),
            "The Argent Adept" => Some(Item::Hero(Hero::ArgentAdept)),
            "Nightmist" => Some(Item::Hero(Hero::Nightmist)),
            "The Scholar" => Some(Item::Hero(Hero::TheScholar)),
            "Chrono-Ranger" => Some(Item::Hero(Hero::ChronoRanger)),
            "Omnitron-X" => Some(Item::Hero(Hero::OmnitronX)),
            "Captain Cosmic" => Some(Item::Hero(Hero::CaptainCosmic)),
            "Sky-Scraper" => Some(Item::Hero(Hero::SkyScraper)),
            "Guise" => Some(Item::Hero(Hero::Guise)),
            "K.N.Y.F.E." => Some(Item::Hero(Hero::KNYFE)),
            "The Naturalist" => Some(Item::Hero(Hero::TheNaturalist)),
            "Parse" => Some(Item::Hero(Hero::Parse)),
            "The Sentinels" => Some(Item::Hero(Hero::TheSentiels)),
            "Setback" => Some(Item::Hero(Hero::Setback)),
            "Benchmark" => Some(Item::Hero(Hero::Benchmark)),
            "Stuntman" => Some(Item::Hero(Hero::Stuntman)),
            "Void Guard Doctor Medico" => Some(Item::Hero(Hero::DoctorMedico)),
            "Void Guard The Idealist" => Some(Item::Hero(Hero::TheIdealist)),
            "Void Guard Mainstay" => Some(Item::Hero(Hero::Mainstay)),
            "Void Guard Writhe" => Some(Item::Hero(Hero::Writhe)),
            "Akash'Thriya" => Some(Item::Hero(Hero::AkashThriya)),
            "La Comodora" => Some(Item::Hero(Hero::LaComodora)),
            "The Harpy" => Some(Item::Hero(Hero::TheHarpy)),
            "Lifeline" => Some(Item::Hero(Hero::Lifeline)),
            "Luminary" => Some(Item::Hero(Hero::Luminary)),
            "Baron Blade" => Some(Item::Villain(Villain::BaronBlade)),
            "Citizen Dawn" => Some(Item::Villain(Villain::CitizenDawn)),
            "Grand Warlord Voss" => Some(Item::Villain(Villain::GrandWarlordVoss)),
            "Omnitron" => Some(Item::Villain(Villain::Omnitron)),
            "Ambuscade" => Some(Item::Villain(Villain::Ambuscade)),
            "The Chairman" => Some(Item::Villain(Villain::TheChairman)),
            "The Matriarch" => Some(Item::Villain(Villain::TheMatriarch)),
            "Plague Rat" => Some(Item::Villain(Villain::PlagueRat)),
            "Spite" => Some(Item::Villain(Villain::Spite)),
            "Akash'Bhuta" => Some(Item::Villain(Villain::AkashBhuta)),
            "Apostate" => Some(Item::Villain(Villain::Apostate)),
            "The Ennead" => Some(Item::Villain(Villain::TheEnnead)),
            "Gloomweaver" => Some(Item::Villain(Villain::Gloomweaver)),
            "Miss Information" => Some(Item::Villain(Villain::MissInformation)),
            "La Capitán" => Some(Item::Villain(Villain::LaCapitan)),
            "The Dreamer" => Some(Item::Villain(Villain::TheDreamer)),
            "Iron Legacy" => Some(Item::Villain(Villain::IronLegacy)),
            "Kismet" => Some(Item::Villain(Villain::Kismet)),
            "Deadline" => Some(Item::Villain(Villain::Deadline)),
            "Infinitor" => Some(Item::Villain(Villain::Infinitor)),
            "Kaargra Warfang" => Some(Item::Villain(Villain::KaargraWarfang)),
            "Progeny" => Some(Item::Villain(Villain::Progeny)),
            "Wager Master" => Some(Item::Villain(Villain::WagerMaster)),
            "Chokepoint" => Some(Item::Villain(Villain::Chokepoint)),
            "Baron Blade (Team)" => Some(Item::TeamVillain(TeamVillain::BaronBlade)),
            "Ermine" => Some(Item::TeamVillain(TeamVillain::Ermine)),
            "Friction" => Some(Item::TeamVillain(TeamVillain::Friction)),
            "Fright Train" => Some(Item::TeamVillain(TeamVillain::FrightTrain)),
            "Proletariat" => Some(Item::TeamVillain(TeamVillain::Proletariat)),
            "Ambuscade (Team)" => Some(Item::TeamVillain(TeamVillain::Ambuscade)),
            "Biomancer" => Some(Item::TeamVillain(TeamVillain::Biomancer)),
            "Bugbear" => Some(Item::TeamVillain(TeamVillain::Bugbear)),
            "La Capitan (Team)" => Some(Item::TeamVillain(TeamVillain::LaCapitan)),
            "Citizens Hammer & Anvil" => Some(Item::TeamVillain(TeamVillain::CitizensHammerAndAnvil)),
            "Greazer" => Some(Item::TeamVillain(TeamVillain::Greazer)),
            "Miss Information (Team)" => Some(Item::TeamVillain(TeamVillain::MissInformation)),
            "The Operative" => Some(Item::TeamVillain(TeamVillain::TheOperative)),
            "Plague Rat (Team)" => Some(Item::TeamVillain(TeamVillain::PlagueRat)),
            "Sergeant Steel" => Some(Item::TeamVillain(TeamVillain::SergeantSteel)),
            "Insula Primalis" => Some(Item::Environment(Environment::InsulaPrimalis)),
            "Megalopolis" => Some(Item::Environment(Environment::Megalopolis)),
            "Ruins of Atlantis" => Some(Item::Environment(Environment::RuinsOfAtlantis)),
            "Wagner Mars Base" => Some(Item::Environment(Environment::WagnerMarsBase)),
            "Silver Gulch, 1883" => Some(Item::Environment(Environment::SilverGulch1883)),
            "Pike Industrial Complex" => Some(Item::Environment(Environment::PikeIndustrialComplex)),
            "Rook City" => Some(Item::Environment(Environment::RookCity)),
            "Realm of Discord" => Some(Item::Environment(Environment::RealmOfDiscord)),
            "Tomb of Anubis" => Some(Item::Environment(Environment::TombOfAnubis)),
            "The Final Wasteland" => Some(Item::Environment(Environment::TheFinalWasteland)),
            "The Block" => Some(Item::Environment(Environment::TheBlock)),
            "Time Cataclysm" => Some(Item::Environment(Environment::TimeCataclysm)),
            "Dok'Thorath Capital" => Some(Item::Environment(Environment::DokThorathCapital)),
            "The Enclave of the Endlings" => Some(Item::Environment(Environment::TheEnclaveOfTheEndlings)),
            "Omnitron IV" => Some(Item::Environment(Environment::OmnitronIV)),
            "Freedom Tower" => Some(Item::Environment(Environment::FreedomTower)),
            "Mobile Defence Platform" => Some(Item::Environment(Environment::MobileDefensePlatform)),
            "Court of Blood" => Some(Item::Environment(Environment::TheCourtOfBlood)),
            "Madame Mittermeier's Fantastical Festival of Conundrums and Curiosities" => Some(Item::Environment(Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities)),
            "Magmaria" => Some(Item::Environment(Environment::Magmaria)),
            "The Temple of Zhu Long" => Some(Item::Environment(Environment::TheTempleOfZhuLong)),
            "The Celestial Tribunal" => Some(Item::Environment(Environment::TheCelestialTribunal)),
            "Champion Studios" => Some(Item::Environment(Environment::ChampionStudios)),
            "Fort Adamant" => Some(Item::Environment(Environment::FortAdamant)),
            "Maerynian Refuge" => Some(Item::Environment(Environment::MaerynianRefuge)),
            "Mordengrad" => Some(Item::Environment(Environment::Mordengrad)),
            "Nexus of the Void" => Some(Item::Environment(Environment::NexusOfTheVoid)),
            "Scion of Oblivaeon" => Some(Item::Scion),
            "Mad Bomber Baron Blade" => Some(Item::Villain(Villain::MadBomberBaronBlade)),
            "Omnitron II" => Some(Item::Villain(Villain::OmnitronII)),
            "Spite - Agent of Gloom" => Some(Item::Villain(Villain::SpiteAgentOfGloom)),
            "Skinwalker Gloomweaver" => Some(Item::Villain(Villain::SkinwalkerGloomweaver)),
            "Trickster Kismet" => Some(Item::Villain(Villain::TricksterKismet)),
            "Heroic Infinitor" => Some(Item::Villain(Villain::HeroicInfinitor)),
            "America's Greatest Legacy" => Some(Item::Variant(Variant::AmericasGreatestLegacy)),
            "America's Newest Legacy" => Some(Item::Variant(Variant::AmericasNewestLegacy)),
            "Dark Visionary" => Some(Item::Variant(Variant::DarkVisionary)),
            "The Eternal Haka" => Some(Item::Variant(Variant::TheEternalHaka)),
            "G.I. Bunker" => Some(Item::Variant(Variant::GIBunker)),
            "Ra - Horus of Two Horizons" => Some(Item::Variant(Variant::RaHorusOfTwoHorizons)),
            "Ra - Setting Sun" => Some(Item::Variant(Variant::RaSettingSun)),
            "Redeemer Fanatic" => Some(Item::Variant(Variant::RedeemerFanatic)),
            "Rook City Wraith" => Some(Item::Variant(Variant::RookCityWraith)),
            "The Super-Scientific Tachyon" => Some(Item::Variant(Variant::TheSuperScientificTachyon)),
            "The Visionary Unleashed" => Some(Item::Variant(Variant::TheVisionaryUnleashed)),
            "Captain Cosmic Requital" => Some(Item::Variant(Variant::CaptainCosmicRequital)),
            "Chrono-Ranger The Best of Times" => Some(Item::Variant(Variant::ChronoRangerTheBestOfTimes)),
            "Dark Conductor Argent Adept" => Some(Item::Variant(Variant::DarkConductorArgentAdept)),
            "Extremist Sky-Scraper" => Some(Item::Variant(Variant::ExtremistSkyScraper)),
            "Omnitron-U" => Some(Item::Variant(Variant::OmnitronU)),
            "Santa Guise" => Some(Item::Variant(Variant::SantaGuise)),
            "The Scholar of the Infinite" => Some(Item::Variant(Variant::TheScholarOfTheInfinite)),
            "Action Hero Stuntman" => Some(Item::Variant(Variant::ActionHeroStuntman)),
            "Akash'Thriya - Spirit of the Void" => Some(Item::Variant(Variant::AkashThriyaSpiritOfTheVoid)),
            "Benchmark Supply & Demand" => Some(Item::Variant(Variant::BenchmarkSupplyAndDemand)),
            "Heroic Luminary" => Some(Item::Variant(Variant::HeroicLuminary)),
            "K.N.Y.F.E. - Rogue Agent" => Some(Item::Variant(Variant::KNYFERogueAgent)),
            "La Comodora - Curse of the Black Spot" => Some(Item::Variant(Variant::LaComodoraCurseOfTheBlackSpot)),
            "Lifeline Blood Mage" => Some(Item::Variant(Variant::LifelineBloodMage)),
            "Parse - Fugue State" => Some(Item::Variant(Variant::ParseFugueState)),
            "The Adamant Sentinels" => Some(Item::Variant(Variant::TheAdamantSentinels)),
            "The Hunted Naturalist" => Some(Item::Variant(Variant::TheHuntedNaturalist)),
            "Termi-Nation Bunker" => Some(Item::Variant(Variant::TermiNationBunker)),
            "Termi-Nation Absolute Zero" => Some(Item::Variant(Variant::TermiNationAbsoluteZero)),
            "Termi-Nation Unity" => Some(Item::Variant(Variant::TermiNationUnity)),
            "Freedom Six Absolute Zero" => Some(Item::Variant(Variant::FreedomSixAbsoluteZero)),
            "Freedom Six Bunker" => Some(Item::Variant(Variant::FreedomSixBunker)),
            "Freedom Six Tachyon" => Some(Item::Variant(Variant::FreedomSixTachyon)),
            "Freedom Six Tempest" => Some(Item::Variant(Variant::FreedomSixTempest)),
            "Freedom Six Wraith" => Some(Item::Variant(Variant::FreedomSixWraith)),
            "Freedom Six Unity" => Some(Item::Variant(Variant::FreedomSixUnity)),
            "Dark Watch Expatriette" => Some(Item::Variant(Variant::DarkWatchExpatriette)),
            "Dark Watch Mister Fixer" => Some(Item::Variant(Variant::DarkWatchMisterFixer)),
            "Dark Watch Nightmist" => Some(Item::Variant(Variant::DarkWatchNightmist)),
            "Dark Watch Setback" => Some(Item::Variant(Variant::DarkWatchSetback)),
            "Dark Watch Harpy" => Some(Item::Variant(Variant::DarkWatchHarpy)),
            "Prime Wardens Argent Adept" => Some(Item::Variant(Variant::PrimeWardensArgentAdept)),
            "Prime Wardens Captain Cosmic" => Some(Item::Variant(Variant::PrimeWardensCaptainCosmic)),
            "Prime Wardens Fanatic" => Some(Item::Variant(Variant::PrimeWardensFanatic)),
            "Prime Wardens Haka" => Some(Item::Variant(Variant::PrimeWardensHaka)),
            "Prime Wardens Tempest" => Some(Item::Variant(Variant::PrimeWardensTempest)),
            "Xtreme Prime Wardens Argent Adept" => Some(Item::Variant(Variant::XtremePrimeWardensArgentAdept)),
            "Xtreme Prime Wardens Tempest" => Some(Item::Variant(Variant::XtremePrimeWardensTempest)),
            "Xtreme Prime Wardens Captain Cosmic" => Some(Item::Variant(Variant::XtremePrimeWardensCaptainCosmic)),
            "Xtreme Prime Wardens Fanatic" => Some(Item::Variant(Variant::XtremePrimeWardensFanatic)),
            "Xtreme Prime Wardens Haka" => Some(Item::Variant(Variant::XtremePrimeWardensHaka)),
            "Freedom Five Absolute Zero" => Some(Item::Variant(Variant::FreedomFiveAbsoluteZero)),
            "Freedom Five Bunker" => Some(Item::Variant(Variant::FreedomFiveBunker)),
            "Freedom Five Wraith" => Some(Item::Variant(Variant::FreedomFiveWraith)),
            "Freedom Five Tachyon" => Some(Item::Variant(Variant::FreedomFiveTachyon)),
            "Freedom Five Legacy" => Some(Item::Variant(Variant::FreedomFiveLegacy)),
            "Super Sentai Idealist" => Some(Item::Variant(Variant::SuperSentaiIdealist)),
            "Dr. Medico Malpractice" => Some(Item::Variant(Variant::DrMedicoMalpractice)),
            "Cosmic Inventor Writhe" => Some(Item::Variant(Variant::CosmicInventorWrithe)),
            "Road Warrior Mainstay" => Some(Item::Variant(Variant::RoadWarriorMainstay)),
            "Completionist Guise" => Some(Item::Variant(Variant::CompletionistGuise)),
            "1 Undo" => Some(Item::Filler),
            _ => None,
        }
    }
}

impl Location {
    pub fn from_str(str: &str) -> Option<Location> {
        match str {
            "Baron Blade - Normal" => Some(Location::Villain((Villain::BaronBlade, 0))),
            "Baron Blade - Advanced" => Some(Location::Villain((Villain::BaronBlade, 1))),
            "Baron Blade - Challenge" => Some(Location::Villain((Villain::BaronBlade, 2))),
            "Baron Blade - Ultimate" => Some(Location::Villain((Villain::BaronBlade, 3))),
            "Mad Bomber Baron Blade - Normal" => Some(Location::Villain((Villain::MadBomberBaronBlade, 0))),
            "Mad Bomber Baron Blade - Advanced" => Some(Location::Villain((Villain::MadBomberBaronBlade, 1))),
            "Mad Bomber Baron Blade - Challenge" => Some(Location::Villain((Villain::MadBomberBaronBlade, 2))),
            "Mad Bomber Baron Blade - Ultimate" => Some(Location::Villain((Villain::MadBomberBaronBlade, 3))),
            "Citizen Dawn - Normal" => Some(Location::Villain((Villain::CitizenDawn, 0))),
            "Citizen Dawn - Advanced" => Some(Location::Villain((Villain::CitizenDawn, 1))),
            "Citizen Dawn - Challenge" => Some(Location::Villain((Villain::CitizenDawn, 2))),
            "Citizen Dawn - Ultimate" => Some(Location::Villain((Villain::CitizenDawn, 3))),
            "Grand Warlord Voss - Normal" => Some(Location::Villain((Villain::GrandWarlordVoss, 0))),
            "Grand Warlord Voss - Advanced" => Some(Location::Villain((Villain::GrandWarlordVoss, 1))),
            "Grand Warlord Voss - Challenge" => Some(Location::Villain((Villain::GrandWarlordVoss, 2))),
            "Grand Warlord Voss - Ultimate" => Some(Location::Villain((Villain::GrandWarlordVoss, 3))),
            "Omnitron - Normal" => Some(Location::Villain((Villain::Omnitron, 0))),
            "Omnitron - Advanced" => Some(Location::Villain((Villain::Omnitron, 1))),
            "Omnitron - Challenge" => Some(Location::Villain((Villain::Omnitron, 2))),
            "Omnitron - Ultimate" => Some(Location::Villain((Villain::Omnitron, 3))),
            "Omnitron II - Normal" => Some(Location::Villain((Villain::OmnitronII, 0))),
            "Omnitron II - Advanced" => Some(Location::Villain((Villain::OmnitronII, 1))),
            "Omnitron II - Challenge" => Some(Location::Villain((Villain::OmnitronII, 2))),
            "Omnitron II - Ultimate" => Some(Location::Villain((Villain::OmnitronII, 3))),
            "Ambuscade - Normal" => Some(Location::Villain((Villain::Ambuscade, 0))),
            "Ambuscade - Advanced" => Some(Location::Villain((Villain::Ambuscade, 1))),
            "Ambuscade - Challenge" => Some(Location::Villain((Villain::Ambuscade, 2))),
            "Ambuscade - Ultimate" => Some(Location::Villain((Villain::Ambuscade, 3))),
            "The Chairman - Normal" => Some(Location::Villain((Villain::TheChairman, 0))),
            "The Chairman - Advanced" => Some(Location::Villain((Villain::TheChairman, 1))),
            "The Chairman - Challenge" => Some(Location::Villain((Villain::TheChairman, 2))),
            "The Chairman - Ultimate" => Some(Location::Villain((Villain::TheChairman, 3))),
            "The Matriarch - Normal" => Some(Location::Villain((Villain::TheMatriarch, 0))),
            "The Matriarch - Advanced" => Some(Location::Villain((Villain::TheMatriarch, 1))),
            "The Matriarch - Challenge" => Some(Location::Villain((Villain::TheMatriarch, 2))),
            "The Matriarch - Ultimate" => Some(Location::Villain((Villain::TheMatriarch, 3))),
            "Plague Rat - Normal" => Some(Location::Villain((Villain::PlagueRat, 0))),
            "Plague Rat - Advanced" => Some(Location::Villain((Villain::PlagueRat, 1))),
            "Plague Rat - Challenge" => Some(Location::Villain((Villain::PlagueRat, 2))),
            "Plague Rat - Ultimate" => Some(Location::Villain((Villain::PlagueRat, 3))),
            "Spite - Normal" => Some(Location::Villain((Villain::Spite, 0))),
            "Spite - Advanced" => Some(Location::Villain((Villain::Spite, 1))),
            "Spite - Challenge" => Some(Location::Villain((Villain::Spite, 2))),
            "Spite - Ultimate" => Some(Location::Villain((Villain::Spite, 3))),
            "Spite - Agent of Gloom - Normal" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 0))),
            "Spite - Agent of Gloom - Advanced" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 1))),
            "Spite - Agent of Gloom & Skinwalker Gloomweaver - Challenge" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 2))),
            "Spite - Agent of Gloom & Skinwalker Gloomweaver - Ultimate" => Some(Location::Villain((Villain::SpiteAgentOfGloom, 3))),
            "Akash'Bhuta - Normal" => Some(Location::Villain((Villain::AkashBhuta, 0))),
            "Akash'Bhuta - Advanced" => Some(Location::Villain((Villain::AkashBhuta, 1))),
            "Akash'Bhuta - Challenge" => Some(Location::Villain((Villain::AkashBhuta, 2))),
            "Akash'Bhuta - Ultimate" => Some(Location::Villain((Villain::AkashBhuta, 3))),
            "Apostate - Normal" => Some(Location::Villain((Villain::Apostate, 0))),
            "Apostate - Advanced" => Some(Location::Villain((Villain::Apostate, 1))),
            "Apostate - Challenge" => Some(Location::Villain((Villain::Apostate, 2))),
            "Apostate - Ultimate" => Some(Location::Villain((Villain::Apostate, 3))),
            "The Ennead - Normal" => Some(Location::Villain((Villain::TheEnnead, 0))),
            "The Ennead - Advanced" => Some(Location::Villain((Villain::TheEnnead, 1))),
            "The Ennead - Challenge" => Some(Location::Villain((Villain::TheEnnead, 2))),
            "The Ennead - Ultimate" => Some(Location::Villain((Villain::TheEnnead, 3))),
            "Gloomweaver - Normal" => Some(Location::Villain((Villain::Gloomweaver, 0))),
            "Gloomweaver - Advanced" => Some(Location::Villain((Villain::Gloomweaver, 1))),
            "Gloomweaver - Challenge" => Some(Location::Villain((Villain::Gloomweaver, 2))),
            "Gloomweaver - Ultimate" => Some(Location::Villain((Villain::Gloomweaver, 3))),
            "Skinwalker Gloomweaver - Normal" => Some(Location::Villain((Villain::SkinwalkerGloomweaver, 0))),
            "Skinwalker Gloomweaver - Advanced" => Some(Location::Villain((Villain::SkinwalkerGloomweaver, 1))),
            "Miss Information - Normal" => Some(Location::Villain((Villain::MissInformation, 0))),
            "Miss Information - Advanced" => Some(Location::Villain((Villain::MissInformation, 1))),
            "Miss Information - Challenge" => Some(Location::Villain((Villain::MissInformation, 2))),
            "Miss Information - Ultimate" => Some(Location::Villain((Villain::MissInformation, 3))),
            "La Capitán - Normal" => Some(Location::Villain((Villain::LaCapitan, 0))),
            "La Capitán - Advanced" => Some(Location::Villain((Villain::LaCapitan, 1))),
            "La Capitán - Challenge" => Some(Location::Villain((Villain::LaCapitan, 2))),
            "La Capitán - Ultimate" => Some(Location::Villain((Villain::LaCapitan, 3))),
            "The Dreamer - Normal" => Some(Location::Villain((Villain::TheDreamer, 0))),
            "The Dreamer - Advanced" => Some(Location::Villain((Villain::TheDreamer, 1))),
            "The Dreamer - Challenge" => Some(Location::Villain((Villain::TheDreamer, 2))),
            "The Dreamer - Ultimate" => Some(Location::Villain((Villain::TheDreamer, 3))),
            "Iron Legacy - Normal" => Some(Location::Villain((Villain::IronLegacy, 0))),
            "Iron Legacy - Advanced" => Some(Location::Villain((Villain::IronLegacy, 1))),
            "Iron Legacy - Challenge" => Some(Location::Villain((Villain::IronLegacy, 2))),
            "Iron Legacy - Ultimate" => Some(Location::Villain((Villain::IronLegacy, 3))),
            "Kismet - Normal" => Some(Location::Villain((Villain::Kismet, 0))),
            "Kismet - Advanced" => Some(Location::Villain((Villain::Kismet, 1))),
            "Kismet - Challenge" => Some(Location::Villain((Villain::Kismet, 2))),
            "Kismet - Ultimate" => Some(Location::Villain((Villain::Kismet, 3))),
            "Trickster Kismet - Normal" => Some(Location::Villain((Villain::TricksterKismet, 0))),
            "Trickster Kismet - Advanced" => Some(Location::Villain((Villain::TricksterKismet, 1))),
            "Trickster Kismet - Challenge" => Some(Location::Villain((Villain::TricksterKismet, 2))),
            "Trickster Kismet - Ultimate" => Some(Location::Villain((Villain::TricksterKismet, 3))),
            "Deadline - Normal" => Some(Location::Villain((Villain::Deadline, 0))),
            "Deadline - Advanced" => Some(Location::Villain((Villain::Deadline, 1))),
            "Deadline - Challenge" => Some(Location::Villain((Villain::Deadline, 2))),
            "Deadline - Ultimate" => Some(Location::Villain((Villain::Deadline, 3))),
            "Infinitor - Normal" => Some(Location::Villain((Villain::Infinitor, 0))),
            "Infinitor - Advanced" => Some(Location::Villain((Villain::Infinitor, 1))),
            "Infinitor - Challenge" => Some(Location::Villain((Villain::Infinitor, 2))),
            "Infinitor - Ultimate" => Some(Location::Villain((Villain::Infinitor, 3))),
            "Heroic Infinitor - Normal" => Some(Location::Villain((Villain::HeroicInfinitor, 0))),
            "Heroic Infinitor - Advanced" => Some(Location::Villain((Villain::HeroicInfinitor, 1))),
            "Heroic Infinitor - Challenge" => Some(Location::Villain((Villain::HeroicInfinitor, 2))),
            "Heroic Infinitor - Ultimate" => Some(Location::Villain((Villain::HeroicInfinitor, 3))),
            "Kaargra Warfang - Normal" => Some(Location::Villain((Villain::KaargraWarfang, 0))),
            "Kaargra Warfang - Advanced" => Some(Location::Villain((Villain::KaargraWarfang, 1))),
            "Kaargra Warfang - Challenge" => Some(Location::Villain((Villain::KaargraWarfang, 2))),
            "Kaargra Warfang - Ultimate" => Some(Location::Villain((Villain::KaargraWarfang, 3))),
            "Progeny - Normal" => Some(Location::Villain((Villain::Progeny, 0))),
            "Progeny - Advanced" => Some(Location::Villain((Villain::Progeny, 1))),
            "Progeny - Challenge" => Some(Location::Villain((Villain::Progeny, 2))),
            "Progeny - Ultimate" => Some(Location::Villain((Villain::Progeny, 3))),
            "Wager Master - Normal" => Some(Location::Villain((Villain::WagerMaster, 0))),
            "Wager Master - Advanced" => Some(Location::Villain((Villain::WagerMaster, 1))),
            "Wager Master - Challenge" => Some(Location::Villain((Villain::WagerMaster, 2))),
            "Wager Master - Ultimate" => Some(Location::Villain((Villain::WagerMaster, 3))),
            "Chokepoint - Normal" => Some(Location::Villain((Villain::Chokepoint, 0))),
            "Chokepoint - Advanced" => Some(Location::Villain((Villain::Chokepoint, 1))),
            "Chokepoint - Challenge" => Some(Location::Villain((Villain::Chokepoint, 2))),
            "Chokepoint - Ultimate" => Some(Location::Villain((Villain::Chokepoint, 3))),
            "Baron Blade (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 0))),
            "Baron Blade (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 1))),
            "Baron Blade (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 2))),
            "Baron Blade (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::BaronBlade, 3))),
            "Ermine - Normal" => Some(Location::TeamVillain((TeamVillain::Ermine, 0))),
            "Ermine - Advanced" => Some(Location::TeamVillain((TeamVillain::Ermine, 1))),
            "Ermine - Challenge" => Some(Location::TeamVillain((TeamVillain::Ermine, 2))),
            "Ermine - Ultimate" => Some(Location::TeamVillain((TeamVillain::Ermine, 3))),
            "Friction - Normal" => Some(Location::TeamVillain((TeamVillain::Friction, 0))),
            "Friction - Advanced" => Some(Location::TeamVillain((TeamVillain::Friction, 1))),
            "Friction - Challenge" => Some(Location::TeamVillain((TeamVillain::Friction, 2))),
            "Friction - Ultimate" => Some(Location::TeamVillain((TeamVillain::Friction, 3))),
            "Fright Train - Normal" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 0))),
            "Fright Train - Advanced" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 1))),
            "Fright Train - Challenge" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 2))),
            "Fright Train - Ultimate" => Some(Location::TeamVillain((TeamVillain::FrightTrain, 3))),
            "Proletariat - Normal" => Some(Location::TeamVillain((TeamVillain::Proletariat, 0))),
            "Proletariat - Advanced" => Some(Location::TeamVillain((TeamVillain::Proletariat, 1))),
            "Proletariat - Challenge" => Some(Location::TeamVillain((TeamVillain::Proletariat, 2))),
            "Proletariat - Ultimate" => Some(Location::TeamVillain((TeamVillain::Proletariat, 3))),
            "Ambuscade (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 0))),
            "Ambuscade (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 1))),
            "Ambuscade (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 2))),
            "Ambuscade (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::Ambuscade, 3))),
            "Biomancer - Normal" => Some(Location::TeamVillain((TeamVillain::Biomancer, 0))),
            "Biomancer - Advanced" => Some(Location::TeamVillain((TeamVillain::Biomancer, 1))),
            "Biomancer - Challenge" => Some(Location::TeamVillain((TeamVillain::Biomancer, 2))),
            "Biomancer - Ultimate" => Some(Location::TeamVillain((TeamVillain::Biomancer, 3))),
            "Bugbear - Normal" => Some(Location::TeamVillain((TeamVillain::Bugbear, 0))),
            "Bugbear - Advanced" => Some(Location::TeamVillain((TeamVillain::Bugbear, 1))),
            "Bugbear - Challenge" => Some(Location::TeamVillain((TeamVillain::Bugbear, 2))),
            "Bugbear - Ultimate" => Some(Location::TeamVillain((TeamVillain::Bugbear, 3))),
            "La Capitan (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 0))),
            "La Capitan (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 1))),
            "La Capitan (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 2))),
            "La Capitan (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::LaCapitan, 3))),
            "Citizens Hammer & Anvil - Normal" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 0))),
            "Citizens Hammer & Anvil - Advanced" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 1))),
            "Citizens Hammer & Anvil - Challenge" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 2))),
            "Citizens Hammer & Anvil - Ultimate" => Some(Location::TeamVillain((TeamVillain::CitizensHammerAndAnvil, 3))),
            "Greazer - Normal" => Some(Location::TeamVillain((TeamVillain::Greazer, 0))),
            "Greazer - Advanced" => Some(Location::TeamVillain((TeamVillain::Greazer, 1))),
            "Greazer - Challenge" => Some(Location::TeamVillain((TeamVillain::Greazer, 2))),
            "Greazer - Ultimate" => Some(Location::TeamVillain((TeamVillain::Greazer, 3))),
            "Miss Information (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::MissInformation, 0))),
            "Miss Information (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::MissInformation, 1))),
            "Miss Information (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::MissInformation, 2))),
            "Miss Information (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::MissInformation, 3))),
            "The Operative - Normal" => Some(Location::TeamVillain((TeamVillain::TheOperative, 0))),
            "The Operative - Advanced" => Some(Location::TeamVillain((TeamVillain::TheOperative, 1))),
            "The Operative - Challenge" => Some(Location::TeamVillain((TeamVillain::TheOperative, 2))),
            "The Operative - Ultimate" => Some(Location::TeamVillain((TeamVillain::TheOperative, 3))),
            "Plague Rat (Team) - Normal" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 0))),
            "Plague Rat (Team) - Advanced" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 1))),
            "Plague Rat (Team) - Challenge" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 2))),
            "Plague Rat (Team) - Ultimate" => Some(Location::TeamVillain((TeamVillain::PlagueRat, 3))),
            "Sergeant Steel - Normal" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 0))),
            "Sergeant Steel - Advanced" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 1))),
            "Sergeant Steel - Challenge" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 2))),
            "Sergeant Steel - Ultimate" => Some(Location::TeamVillain((TeamVillain::SergeantSteel, 3))),
            "Mad Bomber Baron Blade - Unlock" => Some(Location::Variant(Variant::MadBomberBaronBlade)),
            "Omnitron II - Unlock" => Some(Location::Variant(Variant::OmnitronII)),
            "Spite - Agent of Gloom - Unlock" => Some(Location::Variant(Variant::SpiteAgentOfGloom)),
            "Skinwalker Gloomweaver - Unlock" => Some(Location::Variant(Variant::SkinwalkerGloomweaver)),
            "Trickster Kismet - Unlock" => Some(Location::Variant(Variant::TricksterKismet)),
            "Heroic Infinitor - Unlock" => Some(Location::Variant(Variant::HeroicInfinitor)),
            "America's Greatest Legacy - Unlock" => Some(Location::Variant(Variant::AmericasGreatestLegacy)),
            "America's Newest Legacy - Unlock" => Some(Location::Variant(Variant::AmericasNewestLegacy)),
            "Dark Visionary - Unlock" => Some(Location::Variant(Variant::DarkVisionary)),
            "The Eternal Haka - Unlock" => Some(Location::Variant(Variant::TheEternalHaka)),
            "G.I. Bunker - Unlock" => Some(Location::Variant(Variant::GIBunker)),
            "Ra - Horus of Two Horizons - Unlock" => Some(Location::Variant(Variant::RaHorusOfTwoHorizons)),
            "Ra - Setting Sun - Unlock" => Some(Location::Variant(Variant::RaSettingSun)),
            "Redeemer Fanatic - Unlock" => Some(Location::Variant(Variant::RedeemerFanatic)),
            "Rook City Wraith - Unlock" => Some(Location::Variant(Variant::RookCityWraith)),
            "The Super-Scientific Tachyon - Unlock" => Some(Location::Variant(Variant::TheSuperScientificTachyon)),
            "The Visionary Unleashed - Unlock" => Some(Location::Variant(Variant::TheVisionaryUnleashed)),
            "Captain Cosmic Requital - Unlock" => Some(Location::Variant(Variant::CaptainCosmicRequital)),
            "Chrono-Ranger The Best of Times - Unlock" => Some(Location::Variant(Variant::ChronoRangerTheBestOfTimes)),
            "Dark Conductor Argent Adept - Unlock" => Some(Location::Variant(Variant::DarkConductorArgentAdept)),
            "Extremist Sky-Scraper - Unlock" => Some(Location::Variant(Variant::ExtremistSkyScraper)),
            "Omnitron-U - Unlock" => Some(Location::Variant(Variant::OmnitronU)),
            "Santa Guise - Unlock" => Some(Location::Variant(Variant::SantaGuise)),
            "The Scholar of the Infinite - Unlock" => Some(Location::Variant(Variant::TheScholarOfTheInfinite)),
            "Action Hero Stuntman - Unlock" => Some(Location::Variant(Variant::ActionHeroStuntman)),
            "Akash'Thriya - Spirit of the Void - Unlock" => Some(Location::Variant(Variant::AkashThriyaSpiritOfTheVoid)),
            "Benchmark Supply & Demand - Unlock" => Some(Location::Variant(Variant::BenchmarkSupplyAndDemand)),
            "Heroic Luminary - Unlock" => Some(Location::Variant(Variant::HeroicLuminary)),
            "K.N.Y.F.E. Rogue Agent - Unlock" => Some(Location::Variant(Variant::KNYFERogueAgent)),
            "La Comodora - Curse of the Black Spot - Unlock" => Some(Location::Variant(Variant::LaComodoraCurseOfTheBlackSpot)),
            "Lifeline Blood Mage - Unlock" => Some(Location::Variant(Variant::LifelineBloodMage)),
            "Parse - Fugue State - Unlock" => Some(Location::Variant(Variant::ParseFugueState)),
            "The Adamant Sentinels - Unlock" => Some(Location::Variant(Variant::TheAdamantSentinels)),
            "The Hunted Naturalist - Unlock" => Some(Location::Variant(Variant::TheHuntedNaturalist)),
            "Termi-Nation Bunker - Unlock" => Some(Location::Variant(Variant::TermiNationBunker)),
            "Termi-Nation Absolute Zero - Unlock" => Some(Location::Variant(Variant::TermiNationAbsoluteZero)),
            "Termi-Nation Unity - Unlock" => Some(Location::Variant(Variant::TermiNationUnity)),
            "Freedom Six Absolute Zero - Unlock" => Some(Location::Variant(Variant::FreedomSixAbsoluteZero)),
            "Freedom Six Bunker - Unlock" => Some(Location::Variant(Variant::FreedomSixBunker)),
            "Freedom Six Tachyon - Unlock" => Some(Location::Variant(Variant::FreedomSixTachyon)),
            "Freedom Six Tempest - Unlock" => Some(Location::Variant(Variant::FreedomSixTempest)),
            "Freedom Six Wraith - Unlock" => Some(Location::Variant(Variant::FreedomSixWraith)),
            "Freedom Six Unity - Unlock" => Some(Location::Variant(Variant::FreedomSixUnity)),
            "Dark Watch Expatriette - Unlock" => Some(Location::Variant(Variant::DarkWatchExpatriette)),
            "Dark Watch Mister Fixer - Unlock" => Some(Location::Variant(Variant::DarkWatchMisterFixer)),
            "Dark Watch Nightmist - Unlock" => Some(Location::Variant(Variant::DarkWatchNightmist)),
            "Dark Watch Setback - Unlock" => Some(Location::Variant(Variant::DarkWatchSetback)),
            "Dark Watch Harpy - Unlock" => Some(Location::Variant(Variant::DarkWatchHarpy)),
            "Prime Wardens Argent Adept - Unlock" => Some(Location::Variant(Variant::PrimeWardensArgentAdept)),
            "Prime Wardens Captain Cosmic - Unlock" => Some(Location::Variant(Variant::PrimeWardensCaptainCosmic)),
            "Prime Wardens Fanatic - Unlock" => Some(Location::Variant(Variant::PrimeWardensFanatic)),
            "Prime Wardens Haka - Unlock" => Some(Location::Variant(Variant::PrimeWardensHaka)),
            "Prime Wardens Tempest - Unlock" => Some(Location::Variant(Variant::PrimeWardensTempest)),
            "Xtreme Prime Wardens Argent Adept - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensArgentAdept)),
            "Xtreme Prime Wardens Tempest - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensTempest)),
            "Xtreme Prime Wardens Captain Cosmic - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensCaptainCosmic)),
            "Xtreme Prime Wardens Fanatic - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensFanatic)),
            "Xtreme Prime Wardens Haka - Unlock" => Some(Location::Variant(Variant::XtremePrimeWardensHaka)),
            "Freedom Five Absolute Zero - Unlock" => Some(Location::Variant(Variant::FreedomFiveAbsoluteZero)),
            "Freedom Five Bunker - Unlock" => Some(Location::Variant(Variant::FreedomFiveBunker)),
            "Freedom Five Wraith - Unlock" => Some(Location::Variant(Variant::FreedomFiveWraith)),
            "Freedom Five Tachyon - Unlock" => Some(Location::Variant(Variant::FreedomFiveTachyon)),
            "Freedom Five Legacy - Unlock" => Some(Location::Variant(Variant::FreedomFiveLegacy)),
            "Super Sentai Idealist - Unlock" => Some(Location::Variant(Variant::SuperSentaiIdealist)),
            "Dr. Medico Malpractice - Unlock" => Some(Location::Variant(Variant::DrMedicoMalpractice)),
            "Cosmic Inventor Writhe - Unlock" => Some(Location::Variant(Variant::CosmicInventorWrithe)),
            "Road Warrior Mainstay - Unlock" => Some(Location::Variant(Variant::RoadWarriorMainstay)),
            "Insula Primalis - Any difficulty" => Some(Location::Environment(Environment::InsulaPrimalis)),
            "Megalopolis - Any difficulty" => Some(Location::Environment(Environment::Megalopolis)),
            "Ruins of Atlantis - Any difficulty" => Some(Location::Environment(Environment::RuinsOfAtlantis)),
            "Wagner Mars Base - Any difficulty" => Some(Location::Environment(Environment::WagnerMarsBase)),
            "Silver Gulch, 1883 - Any difficulty" => Some(Location::Environment(Environment::SilverGulch1883)),
            "Pike Industrial Complex - Any difficulty" => Some(Location::Environment(Environment::PikeIndustrialComplex)),
            "Rook City - Any difficulty" => Some(Location::Environment(Environment::RookCity)),
            "Realm of Discord - Any difficulty" => Some(Location::Environment(Environment::RealmOfDiscord)),
            "Tomb of Anubis - Any difficulty" => Some(Location::Environment(Environment::TombOfAnubis)),
            "The Final Wasteland - Any difficulty" => Some(Location::Environment(Environment::TheFinalWasteland)),
            "The Block - Any difficulty" => Some(Location::Environment(Environment::TheBlock)),
            "Time Cataclysm - Any difficulty" => Some(Location::Environment(Environment::TimeCataclysm)),
            "Dok'Thorath Capital - Any difficulty" => Some(Location::Environment(Environment::DokThorathCapital)),
            "The Enclave of the Endlings - Any difficulty" => Some(Location::Environment(Environment::TheEnclaveOfTheEndlings)),
            "Omnitron IV - Any difficulty" => Some(Location::Environment(Environment::OmnitronIV)),
            "Freedom Tower - Any difficulty" => Some(Location::Environment(Environment::FreedomTower)),
            "Mobile Defence Platform - Any difficulty" => Some(Location::Environment(Environment::MobileDefensePlatform)),
            "Court of Blood - Any difficulty" => Some(Location::Environment(Environment::TheCourtOfBlood)),
            "Madame Mittermeier's Fantastical Festival of Conundrums and Curiosities - Any difficulty" => {
                Some(Location::Environment(Environment::MadameMittermeiersFantasticalFestivalOfConundrumsAndCuriosities))
            }
            "Magmaria - Any difficulty" => Some(Location::Environment(Environment::Magmaria)),
            "The Temple of Zhu Long - Any difficulty" => Some(Location::Environment(Environment::TheTempleOfZhuLong)),
            "The Celestial Tribunal - Any difficulty" => Some(Location::Environment(Environment::TheCelestialTribunal)),
            "Champion Studios - Any difficulty" => Some(Location::Environment(Environment::ChampionStudios)),
            "Fort Adamant - Any difficulty" => Some(Location::Environment(Environment::FortAdamant)),
            "Maerynian Refuge - Any difficulty" => Some(Location::Environment(Environment::MaerynianRefuge)),
            "Mordengrad - Any difficulty" => Some(Location::Environment(Environment::Mordengrad)),
            "Nexus of the Void - Any difficulty" => Some(Location::Environment(Environment::NexusOfTheVoid)),
            "Oblivaeon" => Some(Location::Victory),
            _ => None,
        }
    }
}
impl Hash for Item {
    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
        match self {
            Item::Hero(v) => *v as usize,
            Item::Variant(v) => *v as usize + Hero::variant_count(),
            Item::Villain(v) => *v as usize + Hero::variant_count() + Variant::variant_count(),
            Item::TeamVillain(v) => *v as usize + Hero::variant_count() + Variant::variant_count() + Villain::variant_count(),
            Item::Environment(v) => *v as usize + Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count(),
            Item::Scion => Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count() + Environment::variant_count(),
            Item::Filler => Hero::variant_count() + Variant::variant_count() + Villain::variant_count() + TeamVillain::variant_count() + Environment::variant_count() + 1,
        }
        .hash(state);
    }
}

impl Hash for Location {
    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
        match self {
            Location::Variant(v) => *v as usize,
            Location::Villain((v, d)) => (*v as usize) * 4 + *d as usize + Variant::variant_count(),
            Location::TeamVillain((v, d)) => (*v as usize) * 4 + *d as usize + Variant::variant_count() + Villain::variant_count() * 4,
            Location::Environment(v) => *v as usize + Variant::variant_count() + Villain::variant_count() * 4 + TeamVillain::variant_count() * 4,
            Location::Victory => Variant::variant_count() + Villain::variant_count() * 4 + TeamVillain::variant_count() * 4 + Environment::variant_count(),
        }
        .hash(state);
    }
}
